
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION_KEY AND_KEY CONDITIONAL_EFFECTS_KEY CONSTANTS_KEY DEFINE_KEY DOMAIN_KEY EFFECT_KEY EQUALITY_KEY EQUALS EXISTENTIAL_PRECONDITIONS_KEY EXISTS_KEY FORALL_KEY GOAL_KEY HYPHEN INIT_KEY LPAREN NAME NEGATIVE_PRECONDITIONS_KEY NOT_KEY OBJECTS_KEY ONEOF_KEY PARAMETERS_KEY PRECONDITION_KEY PREDICATES_KEY PROBABILISTIC_EFFECTS_KEY PROBABILISTIC_KEY PROBABILITY PROBLEM_KEY REQUIREMENTS_KEY RPAREN STRIPS_KEY TYPES_KEY TYPING_KEY UNIVERSAL_PRECONDITIONS_KEY VARIABLE WHEN_KEYpddl : domain\n            | problem\n            | domain problemdomain : LPAREN DEFINE_KEY domain_structure_def_lst RPARENdomain_structure_def_lst : domain_structure_def domain_structure_def_lst\n                         | domain_structure_defdomain_structure_def : domain_def\n                     | require_def \n                     | types_def \n                     | constants_def \n                     | predicates_def\n                     | action_def_lstdomain_def : LPAREN DOMAIN_KEY NAME RPARENrequire_def : LPAREN REQUIREMENTS_KEY require_key_lst RPARENrequire_key_lst : require_key require_key_lst\n                       | require_keyrequire_key : STRIPS_KEY\n                   | EQUALITY_KEY\n                   | TYPING_KEY\n                   | PROBABILISTIC_EFFECTS_KEY\n                   | CONDITIONAL_EFFECTS_KEY\n                   | EXISTENTIAL_PRECONDITIONS_KEY\n                   | NEGATIVE_PRECONDITIONS_KEY\n                   | UNIVERSAL_PRECONDITIONS_KEYtypes_def : LPAREN TYPES_KEY typed_names_lst RPARENconstants_def : LPAREN CONSTANTS_KEY typed_constants_lst RPARENpredicates_def : LPAREN PREDICATES_KEY predicate_def_lst RPARENpredicate_def_lst : predicate_def predicate_def_lst\n                         | predicate_defpredicate_def : LPAREN NAME typed_variables_lst RPAREN\n                     | LPAREN NAME RPARENaction_def_lst : action_def action_def_lst\n                      | action_defaction_def : LPAREN ACTION_KEY NAME parameters_def action_def_body RPARENparameters_def : PARAMETERS_KEY LPAREN typed_variables_lst RPAREN\n                      | PARAMETERS_KEY LPAREN RPARENaction_def_body : precond_def effect_defprecond_def : PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN\n                   | PRECONDITION_KEY precondpreconds_lst : precond preconds_lst\n                    | precondprecond : literal\n               | universal_precond\n               | existential_preconduniversal_precond :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENexistential_precond :\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENeffect_def : EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN\n                  | EFFECT_KEY effecteffect_lst : effect effect_lst\n                  | effecteffect : literal\n              | conditional_for_eff\n              | conditional_when_eff\n              | LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN\n              | LPAREN ONEOF_KEY nd_effect_lst RPARENnd_effect_lst : nd_effect nd_effect_lst\n                     | nd_effectnd_effect : LPAREN AND_KEY effect_lst RPAREN\n                 | effectprob_effect_lst : prob_effect prob_effect_lst\n                       | prob_effectprob_effect : PROBABILITY LPAREN AND_KEY effect_lst RPAREN\n                   | PROBABILITY effectconditional_for_eff :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENconditional_when_eff :\n               | LPAREN WHEN_KEY literal literal RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN\n               | LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN\n               literals_lst : literal literals_lst\n                    | literalliteral : LPAREN NOT_KEY predicate RPAREN\n               | predicateground_predicates_lst : ground_predicate ground_predicates_lst\n                             | ground_predicatepredicate : LPAREN NAME arguments_lst RPAREN\n                 | LPAREN EQUALS VARIABLE VARIABLE RPAREN\n                 | LPAREN EQUALS VARIABLE constant RPAREN\n                 | LPAREN EQUALS constant VARIABLE RPAREN\n                 | LPAREN NAME RPARENarguments_lst : constant arguments_lst\n                     | VARIABLE arguments_lst\n                     | constant\n                     | VARIABLEground_predicate : LPAREN NAME constants_lst RPAREN\n                        | LPAREN NAME RPARENtyped_constants_lst : constants_lst HYPHEN type typed_constants_lst\n                           | constants_lst HYPHEN typetyped_variables_lst : variables_lst HYPHEN type typed_variables_lst\n                           | variables_lst HYPHEN typeconstants_lst : constant constants_lst\n                     | constantvariables_lst : VARIABLE variables_lst\n                     | VARIABLEtyped_names_lst : names_lst HYPHEN type typed_names_lst\n                       | names_lst HYPHEN type\n                       | names_lstnames_lst : NAME names_lst\n                 | NAMEproblem : LPAREN DEFINE_KEY problem_structure_def_lst RPARENproblem_structure_def_lst : problem_structure_def problem_structure_def_lst\n                                 | problem_structure_defproblem_structure_def : problem_def\n                             | domain_def\n                             | objects_def\n                             | init_def\n                             | goal_defproblem_def : LPAREN PROBLEM_KEY NAME RPARENobjects_def : LPAREN OBJECTS_KEY typed_constants_lst RPARENinit_def : LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN INIT_KEY ground_predicates_lst RPARENgoal_def : LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN GOAL_KEY ground_predicates_lst RPARENtype : NAMEconstant : NAME'
    
_lr_action_items = {'EFFECT_KEY':([103,104,117,118,119,120,121,154,167,169,175,191,192,193,220,222,244,245,],[-45,122,-44,-79,-39,-42,-43,-86,-38,-82,-78,-83,-84,-85,-49,-46,-50,-47,]),'ACTION_KEY':([19,29,43,],[34,34,34,]),'EQUALS':([116,140,147,158,177,180,183,196,204,207,209,212,223,234,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'TYPES_KEY':([19,29,],[32,32,]),'INIT_KEY':([19,26,],[37,37,]),'REQUIREMENTS_KEY':([19,29,],[35,35,]),'AND_KEY':([53,67,116,140,177,183,196,204,207,209,223,234,],[82,90,133,161,195,201,215,218,219,221,232,241,]),'ONEOF_KEY':([140,180,183,204,],[162,162,162,162,]),'OBJECTS_KEY':([19,26,],[36,36,]),'TYPING_KEY':([35,56,57,58,59,60,62,63,64,65,],[60,-21,-20,-22,-24,-19,60,-18,-17,-23,]),'EQUALITY_KEY':([35,56,57,58,59,60,62,63,64,65,],[63,-21,-20,-22,-24,-19,63,-18,-17,-23,]),'$end':([1,2,3,5,27,44,],[-1,0,-2,-3,-4,-106,]),'NEGATIVE_PRECONDITIONS_KEY':([35,56,57,58,59,60,62,63,64,65,],[65,-21,-20,-22,-24,-19,65,-18,-17,-23,]),'FORALL_KEY':([116,140,147,180,183,204,],[134,159,134,159,159,159,]),'RPAREN':([9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,28,30,41,42,45,46,48,49,50,51,52,54,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,74,76,78,79,81,83,84,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,110,111,112,113,114,115,117,118,120,121,122,123,124,125,127,130,131,133,135,138,139,141,142,144,145,148,149,151,152,153,154,157,161,162,164,165,166,168,169,170,171,172,173,174,175,179,181,182,184,185,186,187,188,191,192,193,194,197,198,199,200,201,202,203,205,206,208,210,213,214,216,217,218,220,222,224,225,227,228,229,230,231,233,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,],[27,-109,-9,-8,-111,-113,-11,-12,-6,-112,-108,-7,-10,-33,44,-110,-5,-7,-107,-32,74,-121,-98,-103,-105,79,-81,84,-21,-20,-22,-24,-19,87,-16,-18,-17,-23,89,91,92,93,-29,95,-26,-97,-104,-25,-80,102,-119,-14,-15,-115,-117,-114,-13,-28,-27,111,-120,-94,-102,114,115,-92,124,126,127,130,-31,-93,-101,131,-91,-44,-79,-42,-43,-68,-37,-34,143,144,-30,-118,-45,154,-56,-57,-52,-55,-116,-96,-41,167,169,-90,-89,-86,175,-68,-68,-95,189,-40,190,-82,-88,-87,191,192,193,-78,198,-54,-61,-63,202,-65,-68,206,-83,-84,-85,211,216,-51,-53,-60,-68,-59,-64,-67,-58,220,222,-77,226,-72,228,-68,-49,-46,233,-76,236,-62,237,238,239,-69,242,243,-66,244,245,246,-73,-74,-50,-47,248,249,-70,250,-75,]),'DEFINE_KEY':([4,6,],[7,8,]),'CONDITIONAL_EFFECTS_KEY':([35,56,57,58,59,60,62,63,64,65,],[56,-21,-20,-22,-24,-19,56,-18,-17,-23,]),'PROBABILISTIC_EFFECTS_KEY':([35,56,57,58,59,60,62,63,64,65,],[57,-21,-20,-22,-24,-19,57,-18,-17,-23,]),'EXISTENTIAL_PRECONDITIONS_KEY':([35,56,57,58,59,60,62,63,64,65,],[58,-21,-20,-22,-24,-19,58,-18,-17,-23,]),'HYPHEN':([46,47,48,49,50,76,78,108,109,129,],[-121,75,-98,77,-105,-97,-104,128,-100,-99,]),'CONSTANTS_KEY':([19,29,],[31,31,]),'GOAL_KEY':([19,26,],[33,33,]),'NAME':([31,32,34,36,38,39,46,48,50,53,67,73,75,77,80,83,97,98,99,116,128,135,136,140,147,152,153,155,158,177,180,183,196,204,207,209,212,223,234,],[46,50,55,46,69,70,-121,46,50,83,83,96,97,97,83,46,-120,46,50,135,97,46,46,135,135,46,46,46,135,135,135,135,135,135,135,135,135,135,135,]),'PARAMETERS_KEY':([55,],[86,]),'LPAREN':([0,1,7,8,10,11,12,13,14,15,16,17,18,20,21,22,23,25,27,30,33,37,40,42,52,71,74,79,82,84,86,87,89,90,91,92,93,95,102,103,111,115,117,118,120,121,122,124,130,131,132,133,134,137,138,139,142,144,148,154,159,160,161,162,169,175,178,181,182,184,187,189,190,191,192,193,195,201,202,206,211,213,215,216,218,219,220,221,222,226,228,232,233,241,242,243,244,245,248,250,],[4,6,19,26,-109,-9,-8,-111,-113,-11,-12,29,-112,26,-7,-10,43,-110,-4,-7,53,67,73,-32,80,73,-26,-25,80,-119,106,-14,-115,80,-117,-114,-13,-27,-92,116,-31,-91,-44,-79,-42,-43,140,-34,-30,-118,146,147,150,158,-56,-57,-55,-116,147,-86,176,177,180,183,-82,-78,196,180,183,-63,204,207,209,-83,-84,-85,212,180,-59,-58,223,212,212,-72,180,212,-49,212,-46,234,-62,212,-69,212,-73,-74,-50,-47,-70,-75,]),'PRECONDITION_KEY':([85,126,143,],[103,-36,-35,]),'PROBABILISTIC_KEY':([140,180,183,204,],[163,163,163,163,]),'WHEN_KEY':([140,180,183,204,],[160,160,160,160,]),'VARIABLE':([46,96,97,106,109,135,136,145,146,150,152,153,155,156,176,],[-121,109,-120,109,109,152,155,109,109,109,152,152,172,174,109,]),'EXISTS_KEY':([116,147,],[132,132,]),'PROBLEM_KEY':([19,26,],[38,38,]),'PROBABILITY':([118,138,139,142,154,163,169,175,186,187,191,192,193,202,205,206,216,233,237,242,243,248,250,],[-79,-56,-57,-55,-86,187,-82,-78,187,-68,-83,-84,-85,-59,-67,-58,-72,-69,-66,-73,-74,-70,-75,]),'NOT_KEY':([116,140,147,177,180,183,196,204,207,209,212,223,234,],[137,137,137,137,137,137,137,137,137,137,137,137,137,]),'UNIVERSAL_PRECONDITIONS_KEY':([35,56,57,58,59,60,62,63,64,65,],[59,-21,-20,-22,-24,-19,59,-18,-17,-23,]),'DOMAIN_KEY':([19,26,29,],[39,39,39,]),'PREDICATES_KEY':([19,29,],[40,40,]),'STRIPS_KEY':([35,56,57,58,59,60,62,63,64,65,],[64,-21,-20,-22,-24,-19,64,-18,-17,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'typed_constants_lst':([31,36,98,],[45,66,112,]),'predicate':([103,122,133,137,148,160,161,162,178,181,182,187,189,190,195,201,211,213,215,218,219,221,226,232,241,],[118,118,118,157,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'effect_def':([104,],[123,]),'objects_def':([7,8,20,],[13,13,13,]),'constants_lst':([31,36,48,83,98,],[47,47,76,101,47,]),'init_def':([7,8,20,],[18,18,18,]),'require_key':([35,62,],[62,62,]),'names_lst':([32,50,99,],[49,78,49,]),'domain':([0,],[1,]),'effect':([122,161,162,181,182,187,201,218,],[141,181,184,181,184,205,181,181,]),'nd_effect':([162,182,],[182,182,]),'conditional_for_eff':([122,161,162,181,182,187,201,218,],[138,138,138,138,138,138,138,138,]),'ground_predicate':([33,37,52,82,90,],[52,52,52,52,52,]),'problem_structure_def':([7,8,20,],[20,20,20,]),'conditional_when_eff':([122,161,162,181,182,187,201,218,],[139,139,139,139,139,139,139,139,]),'problem':([0,1,],[3,5,]),'action_def_lst':([7,17,23,],[16,16,42,]),'existential_precond':([103,133,148,],[117,117,117,]),'parameters_def':([55,],[85,]),'types_def':([7,17,],[11,11,]),'constants_def':([7,17,],[22,22,]),'precond_def':([85,],[104,]),'preconds_lst':([133,148,],[149,166,]),'action_def_body':([85,],[105,]),'domain_structure_def_lst':([7,17,],[9,28,]),'problem_def':([7,8,20,],[10,10,10,]),'type':([75,77,128,],[98,99,145,]),'require_def':([7,17,],[12,12,]),'literals_lst':([195,213,215,219,221,232,241,],[214,225,227,230,231,240,247,]),'prob_effect':([163,186,],[186,186,]),'goal_def':([7,8,20,],[14,14,14,]),'predicates_def':([7,17,],[15,15,]),'domain_structure_def':([7,17,],[17,17,]),'effect_lst':([161,181,201,218,],[179,199,217,229,]),'ground_predicates_lst':([33,37,52,82,90,],[54,68,81,100,107,]),'constant':([31,36,48,83,98,135,136,152,153,155,],[48,48,48,48,48,153,156,153,153,173,]),'predicate_def':([40,71,],[71,71,]),'variables_lst':([96,106,109,145,146,150,176,],[108,108,129,108,108,108,108,]),'typed_variables_lst':([96,106,145,146,150,176,],[110,125,164,165,168,194,]),'typed_names_lst':([32,99,],[51,113,]),'precond':([103,133,148,],[119,148,148,]),'pddl':([0,],[2,]),'prob_effect_lst':([163,186,],[188,203,]),'arguments_lst':([135,152,153,],[151,170,171,]),'require_key_lst':([35,62,],[61,88,]),'domain_def':([7,8,17,20,],[21,25,30,25,]),'literal':([103,122,133,148,160,161,162,178,181,182,187,189,190,195,201,211,213,215,218,219,221,226,232,241,],[120,142,120,120,178,142,142,197,142,142,142,208,210,213,142,224,213,213,142,213,213,235,213,213,]),'universal_precond':([103,133,148,],[121,121,121,]),'nd_effect_lst':([162,182,],[185,200,]),'action_def':([7,17,23,],[23,23,23,]),'predicate_def_lst':([40,71,],[72,94,]),'problem_structure_def_lst':([7,8,20,],[24,24,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pddl","S'",1,None,None,None),
  ('pddl -> domain','pddl',1,'p_pddl','pddlparser.py',150),
  ('pddl -> problem','pddl',1,'p_pddl','pddlparser.py',151),
  ('pddl -> domain problem','pddl',2,'p_pddl','pddlparser.py',152),
  ('domain -> LPAREN DEFINE_KEY domain_structure_def_lst RPAREN','domain',4,'p_domain','pddlparser.py',160),
  ('domain_structure_def_lst -> domain_structure_def domain_structure_def_lst','domain_structure_def_lst',2,'p_domain_structure_def_lst','pddlparser.py',181),
  ('domain_structure_def_lst -> domain_structure_def','domain_structure_def_lst',1,'p_domain_structure_def_lst','pddlparser.py',182),
  ('domain_structure_def -> domain_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',190),
  ('domain_structure_def -> require_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',191),
  ('domain_structure_def -> types_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',192),
  ('domain_structure_def -> constants_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',193),
  ('domain_structure_def -> predicates_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',194),
  ('domain_structure_def -> action_def_lst','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',195),
  ('domain_def -> LPAREN DOMAIN_KEY NAME RPAREN','domain_def',4,'p_domain_def','pddlparser.py',200),
  ('require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN','require_def',4,'p_require_def','pddlparser.py',205),
  ('require_key_lst -> require_key require_key_lst','require_key_lst',2,'p_require_key_lst','pddlparser.py',210),
  ('require_key_lst -> require_key','require_key_lst',1,'p_require_key_lst','pddlparser.py',211),
  ('require_key -> STRIPS_KEY','require_key',1,'p_require_key','pddlparser.py',219),
  ('require_key -> EQUALITY_KEY','require_key',1,'p_require_key','pddlparser.py',220),
  ('require_key -> TYPING_KEY','require_key',1,'p_require_key','pddlparser.py',221),
  ('require_key -> PROBABILISTIC_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',222),
  ('require_key -> CONDITIONAL_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',223),
  ('require_key -> EXISTENTIAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',224),
  ('require_key -> NEGATIVE_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',225),
  ('require_key -> UNIVERSAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',226),
  ('types_def -> LPAREN TYPES_KEY typed_names_lst RPAREN','types_def',4,'p_types_def','pddlparser.py',231),
  ('constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN','constants_def',4,'p_constants_def','pddlparser.py',237),
  ('predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN','predicates_def',4,'p_predicates_def','pddlparser.py',243),
  ('predicate_def_lst -> predicate_def predicate_def_lst','predicate_def_lst',2,'p_predicate_def_lst','pddlparser.py',248),
  ('predicate_def_lst -> predicate_def','predicate_def_lst',1,'p_predicate_def_lst','pddlparser.py',249),
  ('predicate_def -> LPAREN NAME typed_variables_lst RPAREN','predicate_def',4,'p_predicate_def','pddlparser.py',257),
  ('predicate_def -> LPAREN NAME RPAREN','predicate_def',3,'p_predicate_def','pddlparser.py',258),
  ('action_def_lst -> action_def action_def_lst','action_def_lst',2,'p_action_def_lst','pddlparser.py',267),
  ('action_def_lst -> action_def','action_def_lst',1,'p_action_def_lst','pddlparser.py',268),
  ('action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN','action_def',6,'p_action_def','pddlparser.py',276),
  ('parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN','parameters_def',4,'p_parameters_def','pddlparser.py',281),
  ('parameters_def -> PARAMETERS_KEY LPAREN RPAREN','parameters_def',3,'p_parameters_def','pddlparser.py',282),
  ('action_def_body -> precond_def effect_def','action_def_body',2,'p_action_def_body','pddlparser.py',290),
  ('precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN','precond_def',5,'p_precond_def','pddlparser.py',295),
  ('precond_def -> PRECONDITION_KEY precond','precond_def',2,'p_precond_def','pddlparser.py',296),
  ('preconds_lst -> precond preconds_lst','preconds_lst',2,'p_preconds_lst','pddlparser.py',315),
  ('preconds_lst -> precond','preconds_lst',1,'p_preconds_lst','pddlparser.py',316),
  ('precond -> literal','precond',1,'p_precond','pddlparser.py',324),
  ('precond -> universal_precond','precond',1,'p_precond','pddlparser.py',325),
  ('precond -> existential_precond','precond',1,'p_precond','pddlparser.py',326),
  ('universal_precond -> <empty>','universal_precond',0,'p_universal_precond','pddlparser.py',331),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','universal_precond',7,'p_universal_precond','pddlparser.py',332),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','universal_precond',10,'p_universal_precond','pddlparser.py',333),
  ('existential_precond -> <empty>','existential_precond',0,'p_existential_precond','pddlparser.py',341),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','existential_precond',7,'p_existential_precond','pddlparser.py',342),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','existential_precond',10,'p_existential_precond','pddlparser.py',343),
  ('effect_def -> EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN','effect_def',5,'p_effect_def','pddlparser.py',351),
  ('effect_def -> EFFECT_KEY effect','effect_def',2,'p_effect_def','pddlparser.py',352),
  ('effect_lst -> effect effect_lst','effect_lst',2,'p_effect_lst','pddlparser.py',391),
  ('effect_lst -> effect','effect_lst',1,'p_effect_lst','pddlparser.py',392),
  ('effect -> literal','effect',1,'p_effect','pddlparser.py',400),
  ('effect -> conditional_for_eff','effect',1,'p_effect','pddlparser.py',401),
  ('effect -> conditional_when_eff','effect',1,'p_effect','pddlparser.py',402),
  ('effect -> LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',403),
  ('effect -> LPAREN ONEOF_KEY nd_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',404),
  ('nd_effect_lst -> nd_effect nd_effect_lst','nd_effect_lst',2,'p_nd_effect_lst','pddlparser.py',414),
  ('nd_effect_lst -> nd_effect','nd_effect_lst',1,'p_nd_effect_lst','pddlparser.py',415),
  ('nd_effect -> LPAREN AND_KEY effect_lst RPAREN','nd_effect',4,'p_nd_effect','pddlparser.py',423),
  ('nd_effect -> effect','nd_effect',1,'p_nd_effect','pddlparser.py',424),
  ('prob_effect_lst -> prob_effect prob_effect_lst','prob_effect_lst',2,'p_prob_effect_lst','pddlparser.py',432),
  ('prob_effect_lst -> prob_effect','prob_effect_lst',1,'p_prob_effect_lst','pddlparser.py',433),
  ('prob_effect -> PROBABILITY LPAREN AND_KEY effect_lst RPAREN','prob_effect',5,'p_prob_effect','pddlparser.py',441),
  ('prob_effect -> PROBABILITY effect','prob_effect',2,'p_prob_effect','pddlparser.py',442),
  ('conditional_for_eff -> <empty>','conditional_for_eff',0,'p_conditional_for_eff','pddlparser.py',450),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','conditional_for_eff',7,'p_conditional_for_eff','pddlparser.py',451),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_for_eff',10,'p_conditional_for_eff','pddlparser.py',452),
  ('conditional_when_eff -> <empty>','conditional_when_eff',0,'p_conditional_when_eff','pddlparser.py',460),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal literal RPAREN','conditional_when_eff',5,'p_conditional_when_eff','pddlparser.py',461),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',462),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',463),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',11,'p_conditional_when_eff','pddlparser.py',464),
  ('literals_lst -> literal literals_lst','literals_lst',2,'p_literals_lst','pddlparser.py',478),
  ('literals_lst -> literal','literals_lst',1,'p_literals_lst','pddlparser.py',479),
  ('literal -> LPAREN NOT_KEY predicate RPAREN','literal',4,'p_literal','pddlparser.py',487),
  ('literal -> predicate','literal',1,'p_literal','pddlparser.py',488),
  ('ground_predicates_lst -> ground_predicate ground_predicates_lst','ground_predicates_lst',2,'p_ground_predicates_lst','pddlparser.py',496),
  ('ground_predicates_lst -> ground_predicate','ground_predicates_lst',1,'p_ground_predicates_lst','pddlparser.py',497),
  ('predicate -> LPAREN NAME arguments_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',505),
  ('predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',506),
  ('predicate -> LPAREN EQUALS VARIABLE constant RPAREN','predicate',5,'p_predicate','pddlparser.py',507),
  ('predicate -> LPAREN EQUALS constant VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',508),
  ('predicate -> LPAREN NAME RPAREN','predicate',3,'p_predicate','pddlparser.py',509),
  ('arguments_lst -> constant arguments_lst','arguments_lst',2,'p_arguments_lst','pddlparser.py',519),
  ('arguments_lst -> VARIABLE arguments_lst','arguments_lst',2,'p_arguments_lst','pddlparser.py',520),
  ('arguments_lst -> constant','arguments_lst',1,'p_arguments_lst','pddlparser.py',521),
  ('arguments_lst -> VARIABLE','arguments_lst',1,'p_arguments_lst','pddlparser.py',522),
  ('ground_predicate -> LPAREN NAME constants_lst RPAREN','ground_predicate',4,'p_ground_predicate','pddlparser.py',530),
  ('ground_predicate -> LPAREN NAME RPAREN','ground_predicate',3,'p_ground_predicate','pddlparser.py',531),
  ('typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst','typed_constants_lst',4,'p_typed_constants_lst','pddlparser.py',539),
  ('typed_constants_lst -> constants_lst HYPHEN type','typed_constants_lst',3,'p_typed_constants_lst','pddlparser.py',540),
  ('typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst','typed_variables_lst',4,'p_typed_variables_lst','pddlparser.py',548),
  ('typed_variables_lst -> variables_lst HYPHEN type','typed_variables_lst',3,'p_typed_variables_lst','pddlparser.py',549),
  ('constants_lst -> constant constants_lst','constants_lst',2,'p_constants_lst','pddlparser.py',557),
  ('constants_lst -> constant','constants_lst',1,'p_constants_lst','pddlparser.py',558),
  ('variables_lst -> VARIABLE variables_lst','variables_lst',2,'p_variables_lst','pddlparser.py',566),
  ('variables_lst -> VARIABLE','variables_lst',1,'p_variables_lst','pddlparser.py',567),
  ('typed_names_lst -> names_lst HYPHEN type typed_names_lst','typed_names_lst',4,'p_typed_names_lst','pddlparser.py',575),
  ('typed_names_lst -> names_lst HYPHEN type','typed_names_lst',3,'p_typed_names_lst','pddlparser.py',576),
  ('typed_names_lst -> names_lst','typed_names_lst',1,'p_typed_names_lst','pddlparser.py',577),
  ('names_lst -> NAME names_lst','names_lst',2,'p_names_lst','pddlparser.py',587),
  ('names_lst -> NAME','names_lst',1,'p_names_lst','pddlparser.py',588),
  ('problem -> LPAREN DEFINE_KEY problem_structure_def_lst RPAREN','problem',4,'p_problem','pddlparser.py',598),
  ('problem_structure_def_lst -> problem_structure_def problem_structure_def_lst','problem_structure_def_lst',2,'p_problem_structure_def_lst','pddlparser.py',618),
  ('problem_structure_def_lst -> problem_structure_def','problem_structure_def_lst',1,'p_problem_structure_def_lst','pddlparser.py',619),
  ('problem_structure_def -> problem_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',627),
  ('problem_structure_def -> domain_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',628),
  ('problem_structure_def -> objects_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',629),
  ('problem_structure_def -> init_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',630),
  ('problem_structure_def -> goal_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',631),
  ('problem_def -> LPAREN PROBLEM_KEY NAME RPAREN','problem_def',4,'p_problem_def','pddlparser.py',636),
  ('objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN','objects_def',4,'p_objects_def','pddlparser.py',641),
  ('init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','init_def',7,'p_init_def','pddlparser.py',647),
  ('init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN','init_def',4,'p_init_def','pddlparser.py',648),
  ('goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','goal_def',7,'p_goal_def','pddlparser.py',656),
  ('goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN','goal_def',4,'p_goal_def','pddlparser.py',657),
  ('type -> NAME','type',1,'p_type','pddlparser.py',665),
  ('constant -> NAME','constant',1,'p_constant','pddlparser.py',670),
]
