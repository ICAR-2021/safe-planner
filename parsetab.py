
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION_KEY AND_KEY CONDITIONAL_EFFECTS_KEY CONSTANTS_KEY DEFINE_KEY DOMAIN_KEY EFFECT_KEY EQUALITY_KEY EQUALS EXISTENTIAL_PRECONDITIONS_KEY EXISTS_KEY FORALL_KEY GOAL_KEY HYPHEN INIT_KEY LPAREN NAME NEGATIVE_PRECONDITIONS_KEY NOT_KEY OBJECTS_KEY ONEOF_KEY PARAMETERS_KEY PRECONDITION_KEY PREDICATES_KEY PROBABILISTIC_EFFECTS_KEY PROBABILISTIC_KEY PROBABILITY PROBLEM_KEY REQUIREMENTS_KEY RPAREN STRIPS_KEY TYPES_KEY TYPING_KEY UNIVERSAL_PRECONDITIONS_KEY VARIABLE WHEN_KEYpddl : domain\n            | problemdomain : LPAREN DEFINE_KEY domain_structure_def_lst RPARENdomain_structure_def_lst : domain_structure_def domain_structure_def_lst\n                         | domain_structure_defdomain_structure_def : domain_def\n                     | require_def \n                     | types_def \n                     | constants_def \n                     | predicates_def\n                     | action_def_lstdomain_def : LPAREN DOMAIN_KEY NAME RPARENrequire_def : LPAREN REQUIREMENTS_KEY require_key_lst RPARENrequire_key_lst : require_key require_key_lst\n                       | require_keyrequire_key : STRIPS_KEY\n                   | EQUALITY_KEY\n                   | TYPING_KEY\n                   | PROBABILISTIC_EFFECTS_KEY\n                   | CONDITIONAL_EFFECTS_KEY\n                   | EXISTENTIAL_PRECONDITIONS_KEY\n                   | NEGATIVE_PRECONDITIONS_KEY\n                   | UNIVERSAL_PRECONDITIONS_KEYtypes_def : LPAREN TYPES_KEY typed_names_lst RPARENconstants_def : LPAREN CONSTANTS_KEY typed_constants_lst RPARENpredicates_def : LPAREN PREDICATES_KEY predicate_def_lst RPARENpredicate_def_lst : predicate_def predicate_def_lst\n                         | predicate_defpredicate_def : LPAREN NAME typed_variables_lst RPAREN\n                     | LPAREN NAME RPARENaction_def_lst : action_def action_def_lst\n                      | action_defaction_def : LPAREN ACTION_KEY NAME parameters_def action_def_body RPARENparameters_def : PARAMETERS_KEY LPAREN typed_variables_lst RPAREN\n                      | PARAMETERS_KEY LPAREN RPARENaction_def_body : precond_def effect_defprecond_def : PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN\n                   | PRECONDITION_KEY precondpreconds_lst : precond preconds_lst\n                    | precondprecond : literal\n               | universal_precond\n               | existential_preconduniversal_precond :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENexistential_precond :\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENeffect_def : EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN\n                  | EFFECT_KEY effecteffect_lst : effect effect_lst\n                  | effecteffect : literal\n              | conditional_for_eff\n              | conditional_when_eff\n              | LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN\n              | LPAREN ONEOF_KEY nd_effect_lst RPARENnd_effect_lst : nd_effect nd_effect_lst\n                     | nd_effectnd_effect : LPAREN AND_KEY effect_lst RPAREN\n                 | effectprob_effect_lst : prob_effect prob_effect_lst\n                       | prob_effectprob_effect : PROBABILITY LPAREN AND_KEY effect_lst RPAREN\n                   | PROBABILITY effectconditional_for_eff :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENconditional_when_eff :\n               | LPAREN WHEN_KEY literal literal RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN\n               | LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN\n               literals_lst : literal literals_lst\n                    | literalliteral : LPAREN NOT_KEY predicate RPAREN\n               | predicateground_predicates_lst : ground_predicate ground_predicates_lst\n                             | ground_predicatepredicate : LPAREN NAME variables_lst RPAREN\n                 | LPAREN NAME constants_lst RPAREN\n                 | LPAREN EQUALS VARIABLE VARIABLE RPAREN\n                 | LPAREN NAME RPARENground_predicate : LPAREN NAME constants_lst RPAREN\n                        | LPAREN NAME RPARENtyped_constants_lst : constants_lst HYPHEN type typed_constants_lst\n                           | constants_lst HYPHEN typetyped_variables_lst : variables_lst HYPHEN type typed_variables_lst\n                           | variables_lst HYPHEN typeconstants_lst : constant constants_lst\n                     | constantvariables_lst : VARIABLE variables_lst\n                     | VARIABLEtyped_names_lst : names_lst HYPHEN type typed_names_lst\n                       | names_lst HYPHEN type\n                       | names_lstnames_lst : NAME names_lst\n                 | NAMEproblem : LPAREN DEFINE_KEY problem_structure_def_lst RPARENproblem_structure_def_lst : problem_structure_def problem_structure_def_lst\n                                 | problem_structure_defproblem_structure_def : problem_def\n                             | domain_def\n                             | objects_def\n                             | init_def\n                             | goal_defproblem_def : LPAREN PROBLEM_KEY NAME RPARENobjects_def : LPAREN OBJECTS_KEY typed_constants_lst RPARENinit_def : LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN INIT_KEY ground_predicates_lst RPARENgoal_def : LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN GOAL_KEY ground_predicates_lst RPARENtype : NAMEconstant : NAME'
    
_lr_action_items = {'REQUIREMENTS_KEY':([11,39,],[26,26,]),'PREDICATES_KEY':([11,39,],[29,29,]),'TYPING_KEY':([26,42,43,44,46,47,48,49,50,51,],[43,-20,-18,-21,-23,-19,-16,43,-22,-17,]),'EXISTENTIAL_PRECONDITIONS_KEY':([26,42,43,44,46,47,48,49,50,51,],[44,-20,-18,-21,-23,-19,-16,44,-22,-17,]),'HYPHEN':([59,61,62,65,67,82,87,97,98,112,],[-92,-115,84,-99,89,-91,-98,111,-94,-93,]),'CONSTANTS_KEY':([11,39,],[30,30,]),'UNIVERSAL_PRECONDITIONS_KEY':([26,42,43,44,46,47,48,49,50,51,],[46,-20,-18,-21,-23,-19,-16,46,-22,-17,]),'PROBABILISTIC_EFFECTS_KEY':([26,42,43,44,46,47,48,49,50,51,],[47,-20,-18,-21,-23,-19,-16,47,-22,-17,]),'EQUALS':([126,133,150,158,161,162,169,182,188,201,206,208,213,222,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'$end':([1,3,4,22,36,],[0,-1,-2,-3,-100,]),'EFFECT_KEY':([107,108,122,123,124,125,127,153,173,174,175,179,195,216,218,236,237,],[120,-44,-38,-43,-78,-41,-42,-84,-77,-82,-81,-37,-83,-48,-45,-49,-46,]),'EXISTS_KEY':([126,158,],[139,139,]),'DOMAIN_KEY':([11,24,39,],[33,33,33,]),'FORALL_KEY':([126,133,158,162,169,188,],[142,146,142,146,146,146,]),'INIT_KEY':([11,24,],[31,31,]),'PRECONDITION_KEY':([92,118,131,],[108,-35,-34,]),'PROBABILITY':([124,132,134,135,147,153,167,168,173,174,175,187,189,192,195,197,223,225,228,229,239,240,],[-78,-56,-55,-54,167,-84,-67,167,-77,-82,-81,-57,-66,-58,-83,-71,-68,-65,-73,-72,-69,-74,]),'RPAREN':([6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,23,25,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,59,60,61,64,65,66,67,68,70,71,72,73,75,77,78,79,80,81,82,83,86,87,88,90,93,94,95,96,98,99,100,101,102,103,104,105,106,109,110,112,113,114,115,116,117,119,120,121,123,124,125,127,128,129,130,132,134,135,136,138,141,143,145,148,149,151,152,153,156,157,163,164,166,167,168,170,171,172,173,174,175,176,177,178,180,181,184,185,186,187,189,190,191,192,193,195,197,199,200,203,204,205,207,209,210,212,214,215,216,218,220,221,223,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,],[-105,22,-8,-102,-103,-6,36,-9,-107,-5,-7,-10,-106,-32,-11,-101,-104,-6,-4,-31,-20,-18,-21,71,-23,-19,-16,-15,-22,-17,73,-80,78,79,-28,-92,83,-115,86,-99,88,-97,90,93,-13,-14,-108,-79,96,-113,-26,-27,99,-91,-25,-111,-98,-24,-12,-109,109,110,-86,-94,-30,113,-114,-88,115,-96,118,119,128,-85,-93,-29,-87,130,-95,131,-33,-67,-36,-43,-78,-41,-42,-112,-90,-110,-56,-55,-54,-51,153,-44,-89,-67,-67,173,174,175,-84,-40,179,184,-53,187,-67,-64,192,-60,-62,-77,-82,-81,194,195,-39,196,197,-50,-52,202,-57,-66,-63,-67,-58,-59,-83,-71,-76,211,-67,215,216,218,220,-75,223,225,-61,-48,-45,228,229,-68,-65,232,233,-73,-72,235,236,237,238,239,-49,-46,240,-69,-74,]),'NOT_KEY':([126,133,158,161,162,169,182,188,201,206,208,213,222,],[137,137,137,137,137,137,137,137,137,137,137,137,137,]),'LPAREN':([0,5,6,8,9,10,12,14,15,16,17,18,19,20,21,25,28,29,31,37,41,53,57,71,73,76,78,79,83,85,86,88,90,91,93,96,99,108,110,113,119,120,123,124,125,127,128,130,132,134,135,137,139,141,142,144,145,146,148,153,156,160,164,167,171,172,173,174,175,183,187,191,192,194,195,196,197,198,199,202,203,211,215,216,217,218,219,223,224,228,229,230,236,237,239,240,],[2,11,-105,-8,24,-103,-6,-9,-107,39,-7,-10,-106,40,-11,-104,54,58,63,-6,-31,74,58,-13,-108,74,-113,-26,-25,74,-111,-24,-12,105,-109,-86,-30,126,-85,-29,-33,133,-43,-78,-41,-42,-112,-110,-56,-55,-54,150,154,158,159,161,162,165,169,-84,158,182,162,188,169,-62,-77,-82,-81,201,-57,162,-58,206,-83,208,-71,201,201,213,162,222,-61,-48,201,-45,201,-68,201,-73,-72,201,-49,-46,-69,-74,]),'PARAMETERS_KEY':([69,],[91,]),'OBJECTS_KEY':([11,24,],[35,35,]),'NAME':([27,30,32,33,34,35,54,58,59,61,63,65,74,77,84,89,101,102,104,111,126,133,138,150,158,161,162,169,182,188,201,206,208,213,222,],[52,61,65,68,69,61,77,81,61,-115,77,65,77,61,101,101,-114,61,65,101,138,138,61,138,138,138,138,138,138,138,138,138,138,138,138,]),'GOAL_KEY':([11,24,],[28,28,]),'PROBABILISTIC_KEY':([133,162,169,188,],[147,147,147,147,]),'PROBLEM_KEY':([11,24,],[27,27,]),'ONEOF_KEY':([133,162,169,188,],[148,148,148,148,]),'CONDITIONAL_EFFECTS_KEY':([26,42,43,44,46,47,48,49,50,51,],[42,-20,-18,-21,-23,-19,-16,42,-22,-17,]),'STRIPS_KEY':([26,42,43,44,46,47,48,49,50,51,],[48,-20,-18,-21,-23,-19,-16,48,-22,-17,]),'TYPES_KEY':([11,39,],[32,32,]),'AND_KEY':([54,63,126,133,161,169,182,188,206,208,213,222,],[76,85,141,145,183,191,198,203,217,219,224,230,]),'WHEN_KEY':([133,162,169,188,],[144,144,144,144,]),'NEGATIVE_PRECONDITIONS_KEY':([26,42,43,44,46,47,48,49,50,51,],[50,-20,-18,-21,-23,-19,-16,50,-22,-17,]),'ACTION_KEY':([11,39,40,],[34,34,34,]),'VARIABLE':([81,98,101,105,129,138,140,154,155,159,165,],[98,98,-114,98,98,98,155,98,177,98,98,]),'DEFINE_KEY':([2,],[5,]),'EQUALITY_KEY':([26,42,43,44,46,47,48,49,50,51,],[51,-20,-18,-21,-23,-19,-16,51,-22,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'precond_def':([92,],[107,]),'typed_variables_lst':([81,105,129,154,159,165,],[100,117,143,176,180,186,]),'existential_precond':([108,141,156,],[123,123,123,]),'ground_predicates_lst':([28,31,53,76,85,],[55,64,75,94,103,]),'types_def':([5,16,],[8,8,]),'predicate':([108,120,137,141,144,145,148,156,160,164,167,171,183,191,194,196,198,199,202,203,211,217,219,224,230,],[124,124,149,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'variables_lst':([81,98,105,129,138,154,159,165,],[97,112,97,97,152,97,97,97,]),'literals_lst':([183,198,199,217,219,224,230,],[200,209,210,226,227,231,234,]),'prob_effect':([147,168,],[168,168,]),'constant':([30,35,59,77,102,138,],[59,59,59,59,59,59,]),'pddl':([0,],[1,]),'prob_effect_lst':([147,168,],[166,190,]),'domain':([0,],[3,]),'domain_structure_def_lst':([5,16,],[7,38,]),'conditional_for_eff':([120,145,148,164,167,171,191,203,],[134,134,134,134,134,134,134,134,]),'names_lst':([32,65,104,],[67,87,67,]),'ground_predicate':([28,31,53,76,85,],[53,53,53,53,53,]),'domain_structure_def':([5,16,],[16,16,]),'predicate_def_lst':([29,57,],[56,80,]),'require_key':([26,49,],[49,49,]),'require_def':([5,16,],[17,17,]),'predicates_def':([5,16,],[18,18,]),'init_def':([5,9,],[19,19,]),'action_def':([5,16,20,],[20,20,20,]),'nd_effect_lst':([148,171,],[170,193,]),'universal_precond':([108,141,156,],[127,127,127,]),'action_def_lst':([5,16,20,],[21,21,41,]),'effect':([120,145,148,164,167,171,191,203,],[136,164,172,164,189,172,164,164,]),'conditional_when_eff':([120,145,148,164,167,171,191,203,],[132,132,132,132,132,132,132,132,]),'domain_def':([5,9,16,],[12,25,37,]),'predicate_def':([29,57,],[57,57,]),'objects_def':([5,9,],[6,6,]),'effect_lst':([145,164,191,203,],[163,185,204,214,]),'problem_structure_def':([5,9,],[9,9,]),'type':([84,89,111,],[102,104,129,]),'preconds_lst':([141,156,],[157,178,]),'problem_def':([5,9,],[10,10,]),'problem':([0,],[4,]),'goal_def':([5,9,],[15,15,]),'precond':([108,141,156,],[122,156,156,]),'typed_names_lst':([32,104,],[66,116,]),'constants_lst':([30,35,59,77,102,138,],[62,62,82,95,62,151,]),'problem_structure_def_lst':([5,9,],[13,23,]),'require_key_lst':([26,49,],[45,72,]),'constants_def':([5,16,],[14,14,]),'typed_constants_lst':([30,35,102,],[60,70,114,]),'effect_def':([107,],[121,]),'action_def_body':([92,],[106,]),'literal':([108,120,141,144,145,148,156,160,164,167,171,183,191,194,196,198,199,202,203,211,217,219,224,230,],[125,135,125,160,135,135,125,181,135,135,135,199,135,205,207,199,199,212,135,221,199,199,199,199,]),'nd_effect':([148,171,],[171,171,]),'parameters_def':([69,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pddl","S'",1,None,None,None),
  ('pddl -> domain','pddl',1,'p_pddl','pddlparser.py',150),
  ('pddl -> problem','pddl',1,'p_pddl','pddlparser.py',151),
  ('domain -> LPAREN DEFINE_KEY domain_structure_def_lst RPAREN','domain',4,'p_domain','pddlparser.py',156),
  ('domain_structure_def_lst -> domain_structure_def domain_structure_def_lst','domain_structure_def_lst',2,'p_domain_structure_def_lst','pddlparser.py',177),
  ('domain_structure_def_lst -> domain_structure_def','domain_structure_def_lst',1,'p_domain_structure_def_lst','pddlparser.py',178),
  ('domain_structure_def -> domain_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',186),
  ('domain_structure_def -> require_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',187),
  ('domain_structure_def -> types_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',188),
  ('domain_structure_def -> constants_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',189),
  ('domain_structure_def -> predicates_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',190),
  ('domain_structure_def -> action_def_lst','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',191),
  ('domain_def -> LPAREN DOMAIN_KEY NAME RPAREN','domain_def',4,'p_domain_def','pddlparser.py',196),
  ('require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN','require_def',4,'p_require_def','pddlparser.py',201),
  ('require_key_lst -> require_key require_key_lst','require_key_lst',2,'p_require_key_lst','pddlparser.py',206),
  ('require_key_lst -> require_key','require_key_lst',1,'p_require_key_lst','pddlparser.py',207),
  ('require_key -> STRIPS_KEY','require_key',1,'p_require_key','pddlparser.py',215),
  ('require_key -> EQUALITY_KEY','require_key',1,'p_require_key','pddlparser.py',216),
  ('require_key -> TYPING_KEY','require_key',1,'p_require_key','pddlparser.py',217),
  ('require_key -> PROBABILISTIC_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',218),
  ('require_key -> CONDITIONAL_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',219),
  ('require_key -> EXISTENTIAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',220),
  ('require_key -> NEGATIVE_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',221),
  ('require_key -> UNIVERSAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',222),
  ('types_def -> LPAREN TYPES_KEY typed_names_lst RPAREN','types_def',4,'p_types_def','pddlparser.py',227),
  ('constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN','constants_def',4,'p_constants_def','pddlparser.py',233),
  ('predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN','predicates_def',4,'p_predicates_def','pddlparser.py',239),
  ('predicate_def_lst -> predicate_def predicate_def_lst','predicate_def_lst',2,'p_predicate_def_lst','pddlparser.py',244),
  ('predicate_def_lst -> predicate_def','predicate_def_lst',1,'p_predicate_def_lst','pddlparser.py',245),
  ('predicate_def -> LPAREN NAME typed_variables_lst RPAREN','predicate_def',4,'p_predicate_def','pddlparser.py',253),
  ('predicate_def -> LPAREN NAME RPAREN','predicate_def',3,'p_predicate_def','pddlparser.py',254),
  ('action_def_lst -> action_def action_def_lst','action_def_lst',2,'p_action_def_lst','pddlparser.py',263),
  ('action_def_lst -> action_def','action_def_lst',1,'p_action_def_lst','pddlparser.py',264),
  ('action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN','action_def',6,'p_action_def','pddlparser.py',272),
  ('parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN','parameters_def',4,'p_parameters_def','pddlparser.py',277),
  ('parameters_def -> PARAMETERS_KEY LPAREN RPAREN','parameters_def',3,'p_parameters_def','pddlparser.py',278),
  ('action_def_body -> precond_def effect_def','action_def_body',2,'p_action_def_body','pddlparser.py',286),
  ('precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN','precond_def',5,'p_precond_def','pddlparser.py',291),
  ('precond_def -> PRECONDITION_KEY precond','precond_def',2,'p_precond_def','pddlparser.py',292),
  ('preconds_lst -> precond preconds_lst','preconds_lst',2,'p_preconds_lst','pddlparser.py',311),
  ('preconds_lst -> precond','preconds_lst',1,'p_preconds_lst','pddlparser.py',312),
  ('precond -> literal','precond',1,'p_precond','pddlparser.py',320),
  ('precond -> universal_precond','precond',1,'p_precond','pddlparser.py',321),
  ('precond -> existential_precond','precond',1,'p_precond','pddlparser.py',322),
  ('universal_precond -> <empty>','universal_precond',0,'p_universal_precond','pddlparser.py',327),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','universal_precond',7,'p_universal_precond','pddlparser.py',328),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','universal_precond',10,'p_universal_precond','pddlparser.py',329),
  ('existential_precond -> <empty>','existential_precond',0,'p_existential_precond','pddlparser.py',337),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','existential_precond',7,'p_existential_precond','pddlparser.py',338),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','existential_precond',10,'p_existential_precond','pddlparser.py',339),
  ('effect_def -> EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN','effect_def',5,'p_effect_def','pddlparser.py',347),
  ('effect_def -> EFFECT_KEY effect','effect_def',2,'p_effect_def','pddlparser.py',348),
  ('effect_lst -> effect effect_lst','effect_lst',2,'p_effect_lst','pddlparser.py',387),
  ('effect_lst -> effect','effect_lst',1,'p_effect_lst','pddlparser.py',388),
  ('effect -> literal','effect',1,'p_effect','pddlparser.py',396),
  ('effect -> conditional_for_eff','effect',1,'p_effect','pddlparser.py',397),
  ('effect -> conditional_when_eff','effect',1,'p_effect','pddlparser.py',398),
  ('effect -> LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',399),
  ('effect -> LPAREN ONEOF_KEY nd_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',400),
  ('nd_effect_lst -> nd_effect nd_effect_lst','nd_effect_lst',2,'p_nd_effect_lst','pddlparser.py',410),
  ('nd_effect_lst -> nd_effect','nd_effect_lst',1,'p_nd_effect_lst','pddlparser.py',411),
  ('nd_effect -> LPAREN AND_KEY effect_lst RPAREN','nd_effect',4,'p_nd_effect','pddlparser.py',419),
  ('nd_effect -> effect','nd_effect',1,'p_nd_effect','pddlparser.py',420),
  ('prob_effect_lst -> prob_effect prob_effect_lst','prob_effect_lst',2,'p_prob_effect_lst','pddlparser.py',428),
  ('prob_effect_lst -> prob_effect','prob_effect_lst',1,'p_prob_effect_lst','pddlparser.py',429),
  ('prob_effect -> PROBABILITY LPAREN AND_KEY effect_lst RPAREN','prob_effect',5,'p_prob_effect','pddlparser.py',437),
  ('prob_effect -> PROBABILITY effect','prob_effect',2,'p_prob_effect','pddlparser.py',438),
  ('conditional_for_eff -> <empty>','conditional_for_eff',0,'p_conditional_for_eff','pddlparser.py',446),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','conditional_for_eff',7,'p_conditional_for_eff','pddlparser.py',447),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_for_eff',10,'p_conditional_for_eff','pddlparser.py',448),
  ('conditional_when_eff -> <empty>','conditional_when_eff',0,'p_conditional_when_eff','pddlparser.py',456),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal literal RPAREN','conditional_when_eff',5,'p_conditional_when_eff','pddlparser.py',457),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',458),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',459),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',11,'p_conditional_when_eff','pddlparser.py',460),
  ('literals_lst -> literal literals_lst','literals_lst',2,'p_literals_lst','pddlparser.py',474),
  ('literals_lst -> literal','literals_lst',1,'p_literals_lst','pddlparser.py',475),
  ('literal -> LPAREN NOT_KEY predicate RPAREN','literal',4,'p_literal','pddlparser.py',483),
  ('literal -> predicate','literal',1,'p_literal','pddlparser.py',484),
  ('ground_predicates_lst -> ground_predicate ground_predicates_lst','ground_predicates_lst',2,'p_ground_predicates_lst','pddlparser.py',492),
  ('ground_predicates_lst -> ground_predicate','ground_predicates_lst',1,'p_ground_predicates_lst','pddlparser.py',493),
  ('predicate -> LPAREN NAME variables_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',501),
  ('predicate -> LPAREN NAME constants_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',502),
  ('predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',503),
  ('predicate -> LPAREN NAME RPAREN','predicate',3,'p_predicate','pddlparser.py',504),
  ('ground_predicate -> LPAREN NAME constants_lst RPAREN','ground_predicate',4,'p_ground_predicate','pddlparser.py',514),
  ('ground_predicate -> LPAREN NAME RPAREN','ground_predicate',3,'p_ground_predicate','pddlparser.py',515),
  ('typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst','typed_constants_lst',4,'p_typed_constants_lst','pddlparser.py',523),
  ('typed_constants_lst -> constants_lst HYPHEN type','typed_constants_lst',3,'p_typed_constants_lst','pddlparser.py',524),
  ('typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst','typed_variables_lst',4,'p_typed_variables_lst','pddlparser.py',532),
  ('typed_variables_lst -> variables_lst HYPHEN type','typed_variables_lst',3,'p_typed_variables_lst','pddlparser.py',533),
  ('constants_lst -> constant constants_lst','constants_lst',2,'p_constants_lst','pddlparser.py',541),
  ('constants_lst -> constant','constants_lst',1,'p_constants_lst','pddlparser.py',542),
  ('variables_lst -> VARIABLE variables_lst','variables_lst',2,'p_variables_lst','pddlparser.py',550),
  ('variables_lst -> VARIABLE','variables_lst',1,'p_variables_lst','pddlparser.py',551),
  ('typed_names_lst -> names_lst HYPHEN type typed_names_lst','typed_names_lst',4,'p_typed_names_lst','pddlparser.py',559),
  ('typed_names_lst -> names_lst HYPHEN type','typed_names_lst',3,'p_typed_names_lst','pddlparser.py',560),
  ('typed_names_lst -> names_lst','typed_names_lst',1,'p_typed_names_lst','pddlparser.py',561),
  ('names_lst -> NAME names_lst','names_lst',2,'p_names_lst','pddlparser.py',571),
  ('names_lst -> NAME','names_lst',1,'p_names_lst','pddlparser.py',572),
  ('problem -> LPAREN DEFINE_KEY problem_structure_def_lst RPAREN','problem',4,'p_problem','pddlparser.py',582),
  ('problem_structure_def_lst -> problem_structure_def problem_structure_def_lst','problem_structure_def_lst',2,'p_problem_structure_def_lst','pddlparser.py',602),
  ('problem_structure_def_lst -> problem_structure_def','problem_structure_def_lst',1,'p_problem_structure_def_lst','pddlparser.py',603),
  ('problem_structure_def -> problem_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',611),
  ('problem_structure_def -> domain_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',612),
  ('problem_structure_def -> objects_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',613),
  ('problem_structure_def -> init_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',614),
  ('problem_structure_def -> goal_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',615),
  ('problem_def -> LPAREN PROBLEM_KEY NAME RPAREN','problem_def',4,'p_problem_def','pddlparser.py',620),
  ('objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN','objects_def',4,'p_objects_def','pddlparser.py',625),
  ('init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','init_def',7,'p_init_def','pddlparser.py',631),
  ('init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN','init_def',4,'p_init_def','pddlparser.py',632),
  ('goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','goal_def',7,'p_goal_def','pddlparser.py',640),
  ('goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN','goal_def',4,'p_goal_def','pddlparser.py',641),
  ('type -> NAME','type',1,'p_type','pddlparser.py',649),
  ('constant -> NAME','constant',1,'p_constant','pddlparser.py',654),
]
