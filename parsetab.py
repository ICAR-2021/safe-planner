
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION_KEY AND_KEY CONDITIONAL_EFFECTS_KEY CONSTANTS_KEY DEFINE_KEY DOMAIN_KEY EFFECT_KEY EQUALITY_KEY EQUALS EXISTENTIAL_PRECONDITIONS_KEY EXISTS_KEY FORALL_KEY GOAL_KEY HYPHEN INIT_KEY LPAREN NAME NEGATIVE_PRECONDITIONS_KEY NOT_KEY OBJECTS_KEY ONEOF_KEY PARAMETERS_KEY PRECONDITION_KEY PREDICATES_KEY PROBABILISTIC_EFFECTS_KEY PROBABILISTIC_KEY PROBABILITY PROBLEM_KEY REQUIREMENTS_KEY RPAREN STRIPS_KEY TYPES_KEY TYPING_KEY UNIVERSAL_PRECONDITIONS_KEY VARIABLE WHEN_KEYpddl : domain\n            | problemdomain : LPAREN DEFINE_KEY domain_structure_def_lst RPARENdomain_structure_def_lst : domain_structure_def domain_structure_def_lst\n                         | domain_structure_defdomain_structure_def : domain_def\n                     | require_def \n                     | types_def \n                     | constants_def \n                     | predicates_def\n                     | action_def_lstdomain_def : LPAREN DOMAIN_KEY NAME RPARENrequire_def : LPAREN REQUIREMENTS_KEY require_key_lst RPARENrequire_key_lst : require_key require_key_lst\n                       | require_keyrequire_key : STRIPS_KEY\n                   | EQUALITY_KEY\n                   | TYPING_KEY\n                   | PROBABILISTIC_EFFECTS_KEY\n                   | CONDITIONAL_EFFECTS_KEY\n                   | EXISTENTIAL_PRECONDITIONS_KEY\n                   | NEGATIVE_PRECONDITIONS_KEY\n                   | UNIVERSAL_PRECONDITIONS_KEYtypes_def : LPAREN TYPES_KEY typed_names_lst RPARENconstants_def : LPAREN CONSTANTS_KEY typed_constants_lst RPARENpredicates_def : LPAREN PREDICATES_KEY predicate_def_lst RPARENpredicate_def_lst : predicate_def predicate_def_lst\n                         | predicate_defpredicate_def : LPAREN NAME typed_variables_lst RPAREN\n                     | LPAREN NAME RPARENaction_def_lst : action_def action_def_lst\n                      | action_defaction_def : LPAREN ACTION_KEY NAME parameters_def action_def_body RPARENparameters_def : PARAMETERS_KEY LPAREN typed_variables_lst RPAREN\n                      | PARAMETERS_KEY LPAREN RPARENaction_def_body : precond_def effect_defprecond_def : PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN\n                   | PRECONDITION_KEY precondpreconds_lst : precond preconds_lst\n                    | precondprecond : literal\n               | universal_precond\n               | existential_preconduniversal_precond :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENexistential_precond :\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENeffect_def : EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN\n                  | EFFECT_KEY effecteffect_lst : effect effect_lst\n                  | effecteffect : literal\n              | conditional_for_eff\n              | conditional_when_eff\n              | LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN\n              | LPAREN ONEOF_KEY nd_effect_lst RPARENnd_effect_lst : nd_effect nd_effect_lst\n                     | nd_effectnd_effect : LPAREN AND_KEY effect_lst RPAREN\n                 | effectprob_effect_lst : prob_effect prob_effect_lst\n                       | prob_effectprob_effect : PROBABILITY LPAREN AND_KEY effect_lst RPAREN\n                   | PROBABILITY effectconditional_for_eff :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENconditional_when_eff :\n               | LPAREN WHEN_KEY literal literal RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN\n               | LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN\n               literals_lst : literal literals_lst\n                    | literalliteral : LPAREN NOT_KEY predicate RPAREN\n               | predicateground_predicates_lst : ground_predicate ground_predicates_lst\n                             | ground_predicatepredicate : LPAREN NAME variables_lst RPAREN\n                 | LPAREN NAME constants_lst RPAREN\n                 | LPAREN EQUALS VARIABLE VARIABLE RPAREN\n                 | LPAREN NAME RPARENground_predicate : LPAREN NAME constants_lst RPAREN\n                        | LPAREN NAME RPARENtyped_constants_lst : constants_lst HYPHEN type typed_constants_lst\n                           | constants_lst HYPHEN typetyped_variables_lst : variables_lst HYPHEN type typed_variables_lst\n                           | variables_lst HYPHEN typeconstants_lst : constant constants_lst\n                     | constantvariables_lst : VARIABLE variables_lst\n                     | VARIABLEtyped_names_lst : names_lst HYPHEN type typed_names_lst\n                       | names_lst HYPHEN type\n                       | names_lstnames_lst : NAME names_lst\n                 | NAMEproblem : LPAREN DEFINE_KEY problem_structure_def_lst RPARENproblem_structure_def_lst : problem_structure_def problem_structure_def_lst\n                                 | problem_structure_defproblem_structure_def : problem_def\n                             | domain_def\n                             | objects_def\n                             | init_def\n                             | goal_defproblem_def : LPAREN PROBLEM_KEY NAME RPARENobjects_def : LPAREN OBJECTS_KEY typed_constants_lst RPARENinit_def : LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN INIT_KEY ground_predicates_lst RPARENgoal_def : LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN GOAL_KEY ground_predicates_lst RPARENtype : NAMEconstant : NAME'
    
_lr_action_items = {'UNIVERSAL_PRECONDITIONS_KEY':([29,51,52,53,55,56,57,58,59,60,],[60,-16,-20,-22,-21,-17,-19,60,-18,-23,]),'CONDITIONAL_EFFECTS_KEY':([29,51,52,53,55,56,57,58,59,60,],[52,-16,-20,-22,-21,-17,-19,52,-18,-23,]),'NEGATIVE_PRECONDITIONS_KEY':([29,51,52,53,55,56,57,58,59,60,],[53,-16,-20,-22,-21,-17,-19,53,-18,-23,]),'OBJECTS_KEY':([11,39,],[26,26,]),'NOT_KEY':([120,132,149,160,164,172,189,192,204,206,208,211,225,],[141,141,141,141,141,141,141,141,141,141,141,141,141,]),'TYPES_KEY':([11,22,],[27,27,]),'LPAREN':([0,5,6,7,8,9,10,12,13,14,16,18,19,20,21,24,30,32,33,35,41,61,68,71,74,77,78,79,84,85,86,87,88,91,93,98,104,106,111,116,118,119,121,122,123,125,128,129,131,133,135,136,138,139,141,144,145,146,148,151,157,162,163,165,170,171,178,179,180,181,182,187,193,194,195,196,198,199,200,201,202,209,215,216,217,218,219,220,221,229,230,231,236,237,238,240,],[3,11,-8,-11,22,-106,-103,36,-9,-10,-105,39,-6,-7,-107,-6,62,65,67,-31,-104,81,67,-12,-109,-24,-25,-13,81,-113,-108,81,-111,-26,108,-86,-30,120,-85,-29,132,-41,-78,-43,-42,-33,-112,-110,-54,-55,-56,149,153,154,158,160,164,167,172,149,-84,-62,160,164,189,192,-81,-82,-77,164,-58,-57,204,-83,206,208,211,164,-71,204,204,-61,225,-45,204,-48,204,-68,204,-73,-72,204,-46,-49,-69,-74,]),'AND_KEY':([62,65,120,132,160,172,189,192,206,208,211,225,],[84,87,136,145,181,193,199,201,217,219,221,231,]),'INIT_KEY':([11,39,],[32,32,]),'PRECONDITION_KEY':([92,127,142,],[106,-35,-34,]),'EQUALITY_KEY':([29,51,52,53,55,56,57,58,59,60,],[56,-16,-20,-22,-21,-17,-19,56,-18,-23,]),'$end':([1,2,4,37,38,],[-1,-2,0,-3,-100,]),'EXISTENTIAL_PRECONDITIONS_KEY':([29,51,52,53,55,56,57,58,59,60,],[55,-16,-20,-22,-21,-17,-19,55,-18,-23,]),'PREDICATES_KEY':([11,22,],[33,33,]),'DOMAIN_KEY':([11,22,39,],[25,25,25,]),'HYPHEN':([43,44,45,47,48,73,75,101,102,115,],[72,-115,-92,-99,76,-91,-98,114,-94,-93,]),'REQUIREMENTS_KEY':([11,22,],[29,29,]),'EFFECT_KEY':([105,106,119,121,122,123,124,157,173,178,179,180,194,216,218,236,237,],[118,-44,-41,-78,-43,-42,-38,-84,-37,-81,-82,-77,-83,-45,-48,-46,-49,]),'RPAREN':([6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,23,24,35,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,68,69,71,73,74,75,77,78,79,80,82,83,85,86,88,89,90,91,94,95,96,97,98,99,100,102,103,104,107,108,109,110,111,112,113,115,116,117,118,119,121,122,123,125,126,128,129,130,131,133,134,135,136,140,143,144,145,150,151,155,156,157,159,161,162,163,165,166,168,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,194,197,199,200,202,203,205,207,209,210,212,213,214,216,218,220,222,223,224,226,227,228,229,230,232,233,234,235,236,237,238,239,240,],[-8,-11,-5,-106,-103,-32,-9,-10,37,-105,38,-102,-6,-7,-107,-4,-6,-31,-101,-104,71,-115,-92,74,-99,-97,77,78,-16,-20,-22,79,-21,-17,-19,-15,-18,-23,-80,85,86,88,-28,91,-12,-91,-109,-98,-24,-25,-13,-14,-79,98,-113,-108,-111,104,-27,-26,-114,-88,-96,111,-86,112,113,-94,116,-30,125,127,-87,-95,-85,128,129,-93,-29,-36,-67,-41,-78,-43,-42,-33,142,-112,-110,-90,-54,-55,-51,-56,-44,157,-89,-67,-67,173,-40,178,179,-84,180,182,-62,-60,-53,185,187,-64,-67,-39,194,195,196,-81,-82,-77,-67,-58,-59,-52,-50,198,-57,-63,-66,200,-83,209,-67,-71,-76,215,216,218,-61,220,222,223,-75,-45,-48,-68,-65,229,230,232,233,234,-73,-72,236,237,238,239,-46,-49,-69,240,-74,]),'ACTION_KEY':([11,22,36,],[34,34,34,]),'PROBABILITY':([121,131,133,135,147,157,169,170,178,179,180,182,187,190,194,200,220,222,229,230,238,240,],[-78,-54,-55,-56,170,-84,170,-67,-81,-82,-77,-58,-57,-66,-83,-71,-68,-65,-73,-72,-69,-74,]),'STRIPS_KEY':([29,51,52,53,55,56,57,58,59,60,],[51,-16,-20,-22,-21,-17,-19,51,-18,-23,]),'TYPING_KEY':([29,51,52,53,55,56,57,58,59,60,],[59,-16,-20,-22,-21,-17,-19,59,-18,-23,]),'DEFINE_KEY':([3,],[5,]),'EQUALS':([120,132,149,158,160,164,172,189,192,204,206,208,211,225,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'WHEN_KEY':([132,160,164,189,],[148,148,148,148,]),'PARAMETERS_KEY':([70,],[93,]),'VARIABLE':([89,94,102,108,130,137,140,152,153,154,167,],[102,-114,102,102,102,152,102,175,102,102,102,]),'PROBABILISTIC_KEY':([132,160,164,189,],[147,147,147,147,]),'CONSTANTS_KEY':([11,22,],[28,28,]),'GOAL_KEY':([11,39,],[30,30,]),'NAME':([25,26,27,28,31,34,44,45,47,62,65,67,72,76,81,83,94,95,96,114,120,132,140,149,158,160,164,172,189,192,204,206,208,211,225,],[42,44,47,44,64,70,-115,44,47,83,83,89,94,94,83,44,-114,44,47,94,140,140,44,140,140,140,140,140,140,140,140,140,140,140,140,]),'PROBABILISTIC_EFFECTS_KEY':([29,51,52,53,55,56,57,58,59,60,],[57,-16,-20,-22,-21,-17,-19,57,-18,-23,]),'FORALL_KEY':([120,132,149,160,164,189,],[138,146,138,146,146,146,]),'ONEOF_KEY':([132,160,164,189,],[144,144,144,144,]),'PROBLEM_KEY':([11,39,],[31,31,]),'EXISTS_KEY':([120,149,],[139,139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variables_lst':([89,102,108,130,140,153,154,167,],[101,115,101,101,155,101,101,101,]),'domain':([0,],[1,]),'action_def_lst':([5,8,12,],[7,7,35,]),'effect_def':([105,],[117,]),'problem_def':([5,18,],[10,10,]),'literal':([106,118,136,144,145,148,151,163,165,170,171,181,193,195,196,198,199,201,202,215,217,219,221,231,],[119,131,119,131,131,171,119,131,131,131,191,131,202,205,207,210,131,202,202,224,202,202,202,202,]),'prob_effect_lst':([147,169,],[168,188,]),'prob_effect':([147,169,],[169,169,]),'require_key':([29,58,],[58,58,]),'predicates_def':([5,8,],[14,14,]),'typed_names_lst':([27,96,],[49,110,]),'require_def':([5,8,],[20,20,]),'precond_def':([92,],[105,]),'literals_lst':([193,201,202,217,219,221,231,],[203,213,214,226,227,228,235,]),'require_key_lst':([29,58,],[54,80,]),'domain_structure_def_lst':([5,8,],[15,23,]),'predicate':([106,118,136,141,144,145,148,151,163,165,170,171,181,193,195,196,198,199,201,202,215,217,219,221,231,],[121,121,121,159,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'nd_effect_lst':([144,163,],[161,183,]),'type':([72,76,114,],[95,96,130,]),'typed_variables_lst':([89,108,130,153,154,167,],[103,126,143,176,177,186,]),'existential_precond':([106,136,151,],[122,122,122,]),'domain_def':([5,8,18,],[19,24,41,]),'action_def_body':([92,],[107,]),'types_def':([5,8,],[6,6,]),'parameters_def':([70,],[92,]),'domain_structure_def':([5,8,],[8,8,]),'init_def':([5,18,],[9,9,]),'constant':([26,28,45,83,95,140,],[45,45,45,45,45,45,]),'names_lst':([27,47,96,],[48,75,48,]),'action_def':([5,8,12,],[12,12,12,]),'preconds_lst':([136,151,],[150,174,]),'constants_def':([5,8,],[13,13,]),'predicate_def_lst':([33,68,],[69,90,]),'ground_predicates_lst':([30,32,61,84,87,],[63,66,82,99,100,]),'typed_constants_lst':([26,28,95,],[46,50,109,]),'conditional_for_eff':([118,144,145,163,165,170,181,199,],[133,133,133,133,133,133,133,133,]),'effect':([118,144,145,163,165,170,181,199,],[134,162,165,162,165,190,165,165,]),'pddl':([0,],[4,]),'nd_effect':([144,163,],[163,163,]),'ground_predicate':([30,32,61,84,87,],[61,61,61,61,61,]),'problem':([0,],[2,]),'predicate_def':([33,68,],[68,68,]),'conditional_when_eff':([118,144,145,163,165,170,181,199,],[135,135,135,135,135,135,135,135,]),'problem_structure_def_lst':([5,18,],[17,40,]),'constants_lst':([26,28,45,83,95,140,],[43,43,73,97,43,156,]),'objects_def':([5,18,],[16,16,]),'problem_structure_def':([5,18,],[18,18,]),'universal_precond':([106,136,151,],[123,123,123,]),'precond':([106,136,151,],[124,151,151,]),'goal_def':([5,18,],[21,21,]),'effect_lst':([145,165,181,199,],[166,184,197,212,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pddl","S'",1,None,None,None),
  ('pddl -> domain','pddl',1,'p_pddl','pddlparser.py',152),
  ('pddl -> problem','pddl',1,'p_pddl','pddlparser.py',153),
  ('domain -> LPAREN DEFINE_KEY domain_structure_def_lst RPAREN','domain',4,'p_domain','pddlparser.py',158),
  ('domain_structure_def_lst -> domain_structure_def domain_structure_def_lst','domain_structure_def_lst',2,'p_domain_structure_def_lst','pddlparser.py',178),
  ('domain_structure_def_lst -> domain_structure_def','domain_structure_def_lst',1,'p_domain_structure_def_lst','pddlparser.py',179),
  ('domain_structure_def -> domain_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',187),
  ('domain_structure_def -> require_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',188),
  ('domain_structure_def -> types_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',189),
  ('domain_structure_def -> constants_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',190),
  ('domain_structure_def -> predicates_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',191),
  ('domain_structure_def -> action_def_lst','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',192),
  ('domain_def -> LPAREN DOMAIN_KEY NAME RPAREN','domain_def',4,'p_domain_def','pddlparser.py',197),
  ('require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN','require_def',4,'p_require_def','pddlparser.py',202),
  ('require_key_lst -> require_key require_key_lst','require_key_lst',2,'p_require_key_lst','pddlparser.py',207),
  ('require_key_lst -> require_key','require_key_lst',1,'p_require_key_lst','pddlparser.py',208),
  ('require_key -> STRIPS_KEY','require_key',1,'p_require_key','pddlparser.py',216),
  ('require_key -> EQUALITY_KEY','require_key',1,'p_require_key','pddlparser.py',217),
  ('require_key -> TYPING_KEY','require_key',1,'p_require_key','pddlparser.py',218),
  ('require_key -> PROBABILISTIC_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',219),
  ('require_key -> CONDITIONAL_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',220),
  ('require_key -> EXISTENTIAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',221),
  ('require_key -> NEGATIVE_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',222),
  ('require_key -> UNIVERSAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',223),
  ('types_def -> LPAREN TYPES_KEY typed_names_lst RPAREN','types_def',4,'p_types_def','pddlparser.py',228),
  ('constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN','constants_def',4,'p_constants_def','pddlparser.py',234),
  ('predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN','predicates_def',4,'p_predicates_def','pddlparser.py',240),
  ('predicate_def_lst -> predicate_def predicate_def_lst','predicate_def_lst',2,'p_predicate_def_lst','pddlparser.py',245),
  ('predicate_def_lst -> predicate_def','predicate_def_lst',1,'p_predicate_def_lst','pddlparser.py',246),
  ('predicate_def -> LPAREN NAME typed_variables_lst RPAREN','predicate_def',4,'p_predicate_def','pddlparser.py',254),
  ('predicate_def -> LPAREN NAME RPAREN','predicate_def',3,'p_predicate_def','pddlparser.py',255),
  ('action_def_lst -> action_def action_def_lst','action_def_lst',2,'p_action_def_lst','pddlparser.py',264),
  ('action_def_lst -> action_def','action_def_lst',1,'p_action_def_lst','pddlparser.py',265),
  ('action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN','action_def',6,'p_action_def','pddlparser.py',273),
  ('parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN','parameters_def',4,'p_parameters_def','pddlparser.py',278),
  ('parameters_def -> PARAMETERS_KEY LPAREN RPAREN','parameters_def',3,'p_parameters_def','pddlparser.py',279),
  ('action_def_body -> precond_def effect_def','action_def_body',2,'p_action_def_body','pddlparser.py',287),
  ('precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN','precond_def',5,'p_precond_def','pddlparser.py',292),
  ('precond_def -> PRECONDITION_KEY precond','precond_def',2,'p_precond_def','pddlparser.py',293),
  ('preconds_lst -> precond preconds_lst','preconds_lst',2,'p_preconds_lst','pddlparser.py',312),
  ('preconds_lst -> precond','preconds_lst',1,'p_preconds_lst','pddlparser.py',313),
  ('precond -> literal','precond',1,'p_precond','pddlparser.py',321),
  ('precond -> universal_precond','precond',1,'p_precond','pddlparser.py',322),
  ('precond -> existential_precond','precond',1,'p_precond','pddlparser.py',323),
  ('universal_precond -> <empty>','universal_precond',0,'p_universal_precond','pddlparser.py',328),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','universal_precond',7,'p_universal_precond','pddlparser.py',329),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','universal_precond',10,'p_universal_precond','pddlparser.py',330),
  ('existential_precond -> <empty>','existential_precond',0,'p_existential_precond','pddlparser.py',338),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','existential_precond',7,'p_existential_precond','pddlparser.py',339),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','existential_precond',10,'p_existential_precond','pddlparser.py',340),
  ('effect_def -> EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN','effect_def',5,'p_effect_def','pddlparser.py',348),
  ('effect_def -> EFFECT_KEY effect','effect_def',2,'p_effect_def','pddlparser.py',349),
  ('effect_lst -> effect effect_lst','effect_lst',2,'p_effect_lst','pddlparser.py',388),
  ('effect_lst -> effect','effect_lst',1,'p_effect_lst','pddlparser.py',389),
  ('effect -> literal','effect',1,'p_effect','pddlparser.py',397),
  ('effect -> conditional_for_eff','effect',1,'p_effect','pddlparser.py',398),
  ('effect -> conditional_when_eff','effect',1,'p_effect','pddlparser.py',399),
  ('effect -> LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',400),
  ('effect -> LPAREN ONEOF_KEY nd_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',401),
  ('nd_effect_lst -> nd_effect nd_effect_lst','nd_effect_lst',2,'p_nd_effect_lst','pddlparser.py',411),
  ('nd_effect_lst -> nd_effect','nd_effect_lst',1,'p_nd_effect_lst','pddlparser.py',412),
  ('nd_effect -> LPAREN AND_KEY effect_lst RPAREN','nd_effect',4,'p_nd_effect','pddlparser.py',420),
  ('nd_effect -> effect','nd_effect',1,'p_nd_effect','pddlparser.py',421),
  ('prob_effect_lst -> prob_effect prob_effect_lst','prob_effect_lst',2,'p_prob_effect_lst','pddlparser.py',429),
  ('prob_effect_lst -> prob_effect','prob_effect_lst',1,'p_prob_effect_lst','pddlparser.py',430),
  ('prob_effect -> PROBABILITY LPAREN AND_KEY effect_lst RPAREN','prob_effect',5,'p_prob_effect','pddlparser.py',438),
  ('prob_effect -> PROBABILITY effect','prob_effect',2,'p_prob_effect','pddlparser.py',439),
  ('conditional_for_eff -> <empty>','conditional_for_eff',0,'p_conditional_for_eff','pddlparser.py',447),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','conditional_for_eff',7,'p_conditional_for_eff','pddlparser.py',448),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_for_eff',10,'p_conditional_for_eff','pddlparser.py',449),
  ('conditional_when_eff -> <empty>','conditional_when_eff',0,'p_conditional_when_eff','pddlparser.py',457),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal literal RPAREN','conditional_when_eff',5,'p_conditional_when_eff','pddlparser.py',458),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',459),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',460),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',11,'p_conditional_when_eff','pddlparser.py',461),
  ('literals_lst -> literal literals_lst','literals_lst',2,'p_literals_lst','pddlparser.py',475),
  ('literals_lst -> literal','literals_lst',1,'p_literals_lst','pddlparser.py',476),
  ('literal -> LPAREN NOT_KEY predicate RPAREN','literal',4,'p_literal','pddlparser.py',484),
  ('literal -> predicate','literal',1,'p_literal','pddlparser.py',485),
  ('ground_predicates_lst -> ground_predicate ground_predicates_lst','ground_predicates_lst',2,'p_ground_predicates_lst','pddlparser.py',493),
  ('ground_predicates_lst -> ground_predicate','ground_predicates_lst',1,'p_ground_predicates_lst','pddlparser.py',494),
  ('predicate -> LPAREN NAME variables_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',502),
  ('predicate -> LPAREN NAME constants_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',503),
  ('predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',504),
  ('predicate -> LPAREN NAME RPAREN','predicate',3,'p_predicate','pddlparser.py',505),
  ('ground_predicate -> LPAREN NAME constants_lst RPAREN','ground_predicate',4,'p_ground_predicate','pddlparser.py',515),
  ('ground_predicate -> LPAREN NAME RPAREN','ground_predicate',3,'p_ground_predicate','pddlparser.py',516),
  ('typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst','typed_constants_lst',4,'p_typed_constants_lst','pddlparser.py',524),
  ('typed_constants_lst -> constants_lst HYPHEN type','typed_constants_lst',3,'p_typed_constants_lst','pddlparser.py',525),
  ('typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst','typed_variables_lst',4,'p_typed_variables_lst','pddlparser.py',533),
  ('typed_variables_lst -> variables_lst HYPHEN type','typed_variables_lst',3,'p_typed_variables_lst','pddlparser.py',534),
  ('constants_lst -> constant constants_lst','constants_lst',2,'p_constants_lst','pddlparser.py',542),
  ('constants_lst -> constant','constants_lst',1,'p_constants_lst','pddlparser.py',543),
  ('variables_lst -> VARIABLE variables_lst','variables_lst',2,'p_variables_lst','pddlparser.py',551),
  ('variables_lst -> VARIABLE','variables_lst',1,'p_variables_lst','pddlparser.py',552),
  ('typed_names_lst -> names_lst HYPHEN type typed_names_lst','typed_names_lst',4,'p_typed_names_lst','pddlparser.py',560),
  ('typed_names_lst -> names_lst HYPHEN type','typed_names_lst',3,'p_typed_names_lst','pddlparser.py',561),
  ('typed_names_lst -> names_lst','typed_names_lst',1,'p_typed_names_lst','pddlparser.py',562),
  ('names_lst -> NAME names_lst','names_lst',2,'p_names_lst','pddlparser.py',572),
  ('names_lst -> NAME','names_lst',1,'p_names_lst','pddlparser.py',573),
  ('problem -> LPAREN DEFINE_KEY problem_structure_def_lst RPAREN','problem',4,'p_problem','pddlparser.py',583),
  ('problem_structure_def_lst -> problem_structure_def problem_structure_def_lst','problem_structure_def_lst',2,'p_problem_structure_def_lst','pddlparser.py',611),
  ('problem_structure_def_lst -> problem_structure_def','problem_structure_def_lst',1,'p_problem_structure_def_lst','pddlparser.py',612),
  ('problem_structure_def -> problem_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',620),
  ('problem_structure_def -> domain_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',621),
  ('problem_structure_def -> objects_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',622),
  ('problem_structure_def -> init_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',623),
  ('problem_structure_def -> goal_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',624),
  ('problem_def -> LPAREN PROBLEM_KEY NAME RPAREN','problem_def',4,'p_problem_def','pddlparser.py',629),
  ('objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN','objects_def',4,'p_objects_def','pddlparser.py',634),
  ('init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','init_def',7,'p_init_def','pddlparser.py',640),
  ('init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN','init_def',4,'p_init_def','pddlparser.py',641),
  ('goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','goal_def',7,'p_goal_def','pddlparser.py',649),
  ('goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN','goal_def',4,'p_goal_def','pddlparser.py',650),
  ('type -> NAME','type',1,'p_type','pddlparser.py',658),
  ('constant -> NAME','constant',1,'p_constant','pddlparser.py',663),
]
