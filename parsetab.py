
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION_KEY ADL_KEY AND_KEY CONDITIONAL_EFFECTS_KEY CONSTANTS_KEY DEFINE_KEY DISJUNCTIVE_PRECONDITIONS_KEY DOMAIN_KEY EFFECT_KEY EQUALITY_KEY EQUALS EXISTENTIAL_PRECONDITIONS_KEY EXISTS_KEY FORALL_KEY GOAL_KEY HYPHEN INIT_KEY LPAREN NAME NEGATIVE_PRECONDITIONS_KEY NON_DETERMINISTIC_KEY NOT_KEY OBJECTS_KEY ONEOF_KEY PARAMETERS_KEY PRECONDITION_KEY PREDICATES_KEY PROBABILISTIC_EFFECTS_KEY PROBABILISTIC_KEY PROBABILITY PROBLEM_KEY REQUIREMENTS_KEY RPAREN STRIPS_KEY TYPES_KEY TYPING_KEY UNIVERSAL_PRECONDITIONS_KEY VARIABLE WHEN_KEYpddl : domain\n            | problem\n            | domain problemdomain : LPAREN DEFINE_KEY domain_structure_def_lst RPARENdomain_structure_def_lst : domain_structure_def domain_structure_def_lst\n                         | domain_structure_defdomain_structure_def : domain_def\n                     | require_def \n                     | types_def \n                     | constants_def \n                     | predicates_def\n                     | action_def_lstdomain_def : LPAREN DOMAIN_KEY NAME RPARENrequire_def : LPAREN REQUIREMENTS_KEY require_key_lst RPARENrequire_key_lst : require_key require_key_lst\n                       | require_keyrequire_key : ADL_KEY\n                   | STRIPS_KEY\n                   | EQUALITY_KEY\n                   | TYPING_KEY\n                   | PROBABILISTIC_EFFECTS_KEY\n                   | NON_DETERMINISTIC_KEY\n                   | CONDITIONAL_EFFECTS_KEY\n                   | EXISTENTIAL_PRECONDITIONS_KEY\n                   | NEGATIVE_PRECONDITIONS_KEY\n                   | UNIVERSAL_PRECONDITIONS_KEY\n                   | DISJUNCTIVE_PRECONDITIONS_KEYtypes_def : LPAREN TYPES_KEY typed_names_lst RPARENconstants_def : LPAREN CONSTANTS_KEY typed_constants_lst RPARENpredicates_def : LPAREN PREDICATES_KEY predicate_def_lst RPARENpredicate_def_lst : predicate_def predicate_def_lst\n                         | predicate_defpredicate_def : LPAREN NAME typed_variables_lst RPAREN\n                     | LPAREN NAME RPARENaction_def_lst : action_def action_def_lst\n                      | action_defaction_def : LPAREN ACTION_KEY NAME action_def_body_list RPARENaction_def_body_list : action_def_body action_def_body_list\n                            | action_def_bodyaction_def_body : parameters_def\n                       | precond_def\n                       | effect_defparameters_def : PARAMETERS_KEY LPAREN typed_variables_lst RPAREN\n                      | PARAMETERS_KEY LPAREN RPARENprecond_def : PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN\n                   | PRECONDITION_KEY precondpreconds_lst : precond preconds_lst\n                    | precondprecond : literal\n               | universal_precond\n               | existential_preconduniversal_precond :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENexistential_precond :\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENeffect_def : EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN\n                  | EFFECT_KEY effecteffect_lst : effect effect_lst\n                  | effecteffect : literal\n              | conditional_for_eff\n              | conditional_when_eff\n              | LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN\n              | LPAREN ONEOF_KEY nd_effect_lst RPAREN\n              | LPAREN AND_KEY RPARENnd_effect_lst : nd_effect nd_effect_lst\n                     | nd_effectnd_effect : LPAREN AND_KEY effect_lst RPAREN\n                 | effectprob_effect_lst : prob_effect prob_effect_lst\n                       | prob_effectprob_effect : PROBABILITY LPAREN AND_KEY effect_lst RPAREN\n                   | PROBABILITY effectconditional_for_eff :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN conditional_when_eff RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENconditional_when_eff :\n               | LPAREN WHEN_KEY literal literal RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN\n               | LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN\n               literals_lst : literal literals_lst\n                    | literalliteral : LPAREN NOT_KEY predicate RPAREN\n               | predicateground_predicates_lst : ground_predicate ground_predicates_lst\n                             | ground_predicatepredicate : LPAREN NAME arguments_lst RPAREN\n                 | LPAREN EQUALS VARIABLE VARIABLE RPAREN\n                 | LPAREN EQUALS VARIABLE constant RPAREN\n                 | LPAREN EQUALS constant VARIABLE RPAREN\n                 | LPAREN NAME RPARENarguments_lst : constant arguments_lst\n                     | VARIABLE arguments_lst\n                     | constant\n                     | VARIABLEground_predicate : LPAREN NAME constants_lst RPAREN\n                        | LPAREN NAME RPARENtyped_constants_lst : constants_lst HYPHEN type typed_constants_lst\n                           | constants_lst HYPHEN typetyped_variables_lst : variables_lst HYPHEN type typed_variables_lst\n                           | variables_lst HYPHEN typeconstants_lst : constant constants_lst\n                     | constantvariables_lst : VARIABLE variables_lst\n                     | VARIABLEtyped_names_lst : names_lst HYPHEN type typed_names_lst\n                       | names_lst HYPHEN type\n                       | names_lstnames_lst : NAME names_lst\n                 | NAMEproblem : LPAREN DEFINE_KEY problem_structure_def_lst RPARENproblem_structure_def_lst : problem_structure_def problem_structure_def_lst\n                                 | problem_structure_defproblem_structure_def : problem_def\n                             | domain_def\n                             | objects_def\n                             | init_def\n                             | goal_defproblem_def : LPAREN PROBLEM_KEY NAME RPARENobjects_def : LPAREN OBJECTS_KEY typed_constants_lst RPARENinit_def : LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN INIT_KEY ground_predicates_lst RPARENgoal_def : LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN GOAL_KEY ground_predicates_lst RPARENtype : NAMEconstant : NAME'
    
_lr_action_items = {'LPAREN':([0,2,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,26,31,34,35,37,40,43,68,73,77,78,80,83,87,89,90,91,93,96,97,103,104,105,110,115,117,122,123,124,125,128,129,130,133,137,141,142,143,144,147,149,150,151,153,154,158,164,171,172,175,178,179,182,186,189,198,202,203,206,209,210,211,212,213,214,216,219,220,221,227,231,234,235,236,237,239,240,241,248,249,250,255,256,257,259,],[4,6,9,25,41,25,-7,-8,-9,-10,-11,-12,-118,-120,-121,-122,44,-119,66,71,74,-4,-7,-35,66,95,-13,-14,-28,-29,-30,-123,-124,95,-126,95,-128,119,120,126,-34,-101,-37,-49,-50,-51,-88,-62,-63,-64,-33,-100,156,159,161,162,169,176,180,181,-125,-127,156,-95,-67,169,200,176,-71,207,-87,-91,-65,169,-66,217,222,224,-92,-93,-94,169,228,217,217,-81,-70,242,217,-53,217,-56,217,-77,-78,217,-82,-83,-54,-57,-79,-84,]),'$end':([1,2,3,5,37,38,],[0,-1,-2,-3,-4,-115,]),'DEFINE_KEY':([4,6,],[7,8,]),'DOMAIN_KEY':([9,25,41,],[27,27,27,]),'REQUIREMENTS_KEY':([9,41,],[28,28,]),'TYPES_KEY':([9,41,],[29,29,]),'CONSTANTS_KEY':([9,41,],[30,30,]),'PREDICATES_KEY':([9,41,],[31,31,]),'PROBLEM_KEY':([9,25,],[32,32,]),'OBJECTS_KEY':([9,25,],[33,33,]),'INIT_KEY':([9,25,],[34,34,]),'GOAL_KEY':([9,25,],[35,35,]),'ACTION_KEY':([9,41,44,],[36,36,36,]),'RPAREN':([10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,67,68,69,70,72,73,75,77,78,79,80,82,83,85,86,87,88,89,90,92,93,94,97,98,99,100,101,102,104,105,106,107,108,109,110,113,114,115,116,117,118,119,121,122,123,124,125,127,128,129,130,131,132,133,136,137,138,139,140,141,145,147,149,152,153,154,155,157,158,160,163,164,165,166,170,171,172,173,174,175,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,208,211,212,213,214,215,216,218,219,221,223,225,226,227,229,230,232,233,235,237,238,240,241,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,],[37,38,-6,-117,-7,-8,-9,-10,-11,-12,-118,-120,-121,-122,-36,-119,-5,-7,-116,-35,77,78,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,80,-112,-114,83,-107,-130,87,-32,89,90,93,-90,97,-13,-14,-15,-28,-113,-29,-106,110,-30,-31,-123,-124,115,-126,-89,-128,117,-39,-40,-41,-42,-52,-76,-111,-129,-103,133,-34,136,137,-101,138,-37,-38,140,-46,-49,-50,-51,-88,-59,-62,-63,-64,-110,-102,-33,153,-100,154,155,-44,-52,164,171,-76,-105,-125,-127,-43,184,-48,186,189,-95,-98,-99,196,-67,-61,198,-73,-76,203,-69,-71,-104,-45,-47,-87,209,210,-91,-96,-97,211,212,213,171,-58,-60,-65,-72,-75,171,-66,-68,216,221,-92,-93,-94,171,227,-80,231,-86,-81,235,237,238,-70,240,241,-85,244,-53,-56,-74,-77,-78,249,250,251,252,253,-82,-83,255,256,257,258,-54,-57,-79,259,-84,]),'NAME':([27,29,30,32,33,36,61,64,65,66,71,74,81,84,92,95,106,107,108,120,126,134,145,146,156,159,165,166,167,169,176,181,200,207,217,222,224,228,242,],[45,61,65,69,65,76,61,65,-130,86,92,92,107,107,65,92,61,-129,65,145,145,107,65,65,145,145,65,65,65,145,145,145,145,145,145,145,145,145,145,]),'ADL_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[48,48,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'STRIPS_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[49,49,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'EQUALITY_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[50,50,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'TYPING_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[51,51,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'PROBABILISTIC_EFFECTS_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[52,52,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'NON_DETERMINISTIC_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[53,53,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'CONDITIONAL_EFFECTS_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[54,54,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'EXISTENTIAL_PRECONDITIONS_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[55,55,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'NEGATIVE_PRECONDITIONS_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[56,56,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'UNIVERSAL_PRECONDITIONS_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[57,57,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'DISJUNCTIVE_PRECONDITIONS_KEY':([28,47,48,49,50,51,52,53,54,55,56,57,58,],[58,58,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'HYPHEN':([60,61,63,64,65,82,85,111,112,135,],[81,-114,84,-107,-130,-113,-106,134,-109,-108,]),'VARIABLE':([65,86,107,112,119,145,146,152,161,162,165,166,167,168,180,],[-130,112,-129,112,112,166,167,112,112,112,166,166,192,194,112,]),'AND_KEY':([71,74,120,126,169,176,181,200,207,222,224,228,242,],[91,96,141,147,195,202,206,214,220,234,236,239,248,]),'PARAMETERS_KEY':([76,99,100,101,102,104,105,121,122,123,124,125,127,128,129,130,140,155,164,171,184,186,189,196,198,203,211,212,213,221,235,237,240,241,249,250,255,256,257,259,],[103,103,-40,-41,-42,-52,-76,-46,-49,-50,-51,-88,-59,-62,-63,-64,-44,-43,-95,-67,-45,-87,-91,-58,-65,-66,-92,-93,-94,-81,-53,-56,-77,-78,-82,-83,-54,-57,-79,-84,]),'PRECONDITION_KEY':([76,99,100,101,102,104,105,121,122,123,124,125,127,128,129,130,140,155,164,171,184,186,189,196,198,203,211,212,213,221,235,237,240,241,249,250,255,256,257,259,],[104,104,-40,-41,-42,-52,-76,-46,-49,-50,-51,-88,-59,-62,-63,-64,-44,-43,-95,-67,-45,-87,-91,-58,-65,-66,-92,-93,-94,-81,-53,-56,-77,-78,-82,-83,-54,-57,-79,-84,]),'EFFECT_KEY':([76,99,100,101,102,104,105,121,122,123,124,125,127,128,129,130,140,155,164,171,184,186,189,196,198,203,211,212,213,221,235,237,240,241,249,250,255,256,257,259,],[105,105,-40,-41,-42,-52,-76,-46,-49,-50,-51,-88,-59,-62,-63,-64,-44,-43,-95,-67,-45,-87,-91,-58,-65,-66,-92,-93,-94,-81,-53,-56,-77,-78,-82,-83,-54,-57,-79,-84,]),'NOT_KEY':([120,126,156,169,176,181,200,207,217,222,224,228,242,],[142,142,142,142,142,142,142,142,142,142,142,142,142,]),'FORALL_KEY':([120,126,156,169,176,200,],[143,150,143,150,150,150,]),'EXISTS_KEY':([120,156,],[144,144,]),'EQUALS':([120,126,156,159,169,176,181,200,207,217,222,224,228,242,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'PROBABILITY':([125,128,129,130,148,164,171,174,175,186,189,198,201,203,211,212,213,221,238,240,241,249,250,257,259,],[-88,-62,-63,-64,175,-95,-67,175,-76,-87,-91,-65,-75,-66,-92,-93,-94,-81,-74,-77,-78,-82,-83,-79,-84,]),'PROBABILISTIC_KEY':([126,169,176,200,],[148,148,148,148,]),'ONEOF_KEY':([126,169,176,200,],[149,149,149,149,]),'WHEN_KEY':([126,169,176,200,228,],[151,151,151,151,151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pddl':([0,],[1,]),'domain':([0,],[2,]),'problem':([0,2,],[3,5,]),'domain_structure_def_lst':([7,12,],[10,39,]),'problem_structure_def_lst':([7,8,13,],[11,11,42,]),'domain_structure_def':([7,12,],[12,12,]),'problem_structure_def':([7,8,13,],[13,13,13,]),'domain_def':([7,8,12,13,],[14,26,40,26,]),'require_def':([7,12,],[15,15,]),'types_def':([7,12,],[16,16,]),'constants_def':([7,12,],[17,17,]),'predicates_def':([7,12,],[18,18,]),'action_def_lst':([7,12,24,],[19,19,43,]),'problem_def':([7,8,13,],[20,20,20,]),'objects_def':([7,8,13,],[21,21,21,]),'init_def':([7,8,13,],[22,22,22,]),'goal_def':([7,8,13,],[23,23,23,]),'action_def':([7,12,24,],[24,24,24,]),'require_key_lst':([28,47,],[46,79,]),'require_key':([28,47,],[47,47,]),'typed_names_lst':([29,106,],[59,131,]),'names_lst':([29,61,106,],[60,82,60,]),'typed_constants_lst':([30,33,108,],[62,70,132,]),'constants_lst':([30,33,64,92,108,],[63,63,85,114,63,]),'constant':([30,33,64,92,108,145,146,165,166,167,],[64,64,64,64,64,165,168,165,165,193,]),'predicate_def_lst':([31,68,],[67,88,]),'predicate_def':([31,68,],[68,68,]),'ground_predicates_lst':([34,35,73,91,96,],[72,75,94,113,116,]),'ground_predicate':([34,35,73,91,96,],[73,73,73,73,73,]),'action_def_body_list':([76,99,],[98,118,]),'action_def_body':([76,99,],[99,99,]),'parameters_def':([76,99,],[100,100,]),'precond_def':([76,99,],[101,101,]),'effect_def':([76,99,],[102,102,]),'type':([81,84,134,],[106,108,152,]),'typed_variables_lst':([86,119,152,161,162,180,],[109,139,183,187,188,205,]),'variables_lst':([86,112,119,152,161,162,180,],[111,135,111,111,111,111,111,]),'precond':([104,141,158,],[121,158,158,]),'literal':([104,105,141,147,149,151,158,172,175,178,182,202,206,209,210,214,216,219,220,231,234,236,239,248,],[122,128,122,128,128,182,122,128,128,128,208,128,219,223,225,128,230,219,219,243,219,219,219,219,]),'universal_precond':([104,141,158,],[123,123,123,]),'existential_precond':([104,141,158,],[124,124,124,]),'predicate':([104,105,141,142,147,149,151,158,172,175,178,182,202,206,209,210,214,216,219,220,231,234,236,239,248,],[125,125,125,160,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'effect':([105,147,149,172,175,178,202,214,],[127,172,179,172,201,179,172,172,]),'conditional_for_eff':([105,147,149,172,175,178,202,214,],[129,129,129,129,129,129,129,129,]),'conditional_when_eff':([105,147,149,172,175,178,202,214,216,],[130,130,130,130,130,130,130,130,229,]),'preconds_lst':([141,158,],[157,185,]),'arguments_lst':([145,165,166,],[163,190,191,]),'effect_lst':([147,172,202,214,],[170,197,215,226,]),'prob_effect_lst':([148,174,],[173,199,]),'prob_effect':([148,174,],[174,174,]),'nd_effect_lst':([149,178,],[177,204,]),'nd_effect':([149,178,],[178,178,]),'literals_lst':([206,219,220,234,236,239,248,],[218,232,233,245,246,247,254,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pddl","S'",1,None,None,None),
  ('pddl -> domain','pddl',1,'p_pddl','pddlparser.py',156),
  ('pddl -> problem','pddl',1,'p_pddl','pddlparser.py',157),
  ('pddl -> domain problem','pddl',2,'p_pddl','pddlparser.py',158),
  ('domain -> LPAREN DEFINE_KEY domain_structure_def_lst RPAREN','domain',4,'p_domain','pddlparser.py',166),
  ('domain_structure_def_lst -> domain_structure_def domain_structure_def_lst','domain_structure_def_lst',2,'p_domain_structure_def_lst','pddlparser.py',188),
  ('domain_structure_def_lst -> domain_structure_def','domain_structure_def_lst',1,'p_domain_structure_def_lst','pddlparser.py',189),
  ('domain_structure_def -> domain_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',197),
  ('domain_structure_def -> require_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',198),
  ('domain_structure_def -> types_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',199),
  ('domain_structure_def -> constants_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',200),
  ('domain_structure_def -> predicates_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',201),
  ('domain_structure_def -> action_def_lst','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',202),
  ('domain_def -> LPAREN DOMAIN_KEY NAME RPAREN','domain_def',4,'p_domain_def','pddlparser.py',207),
  ('require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN','require_def',4,'p_require_def','pddlparser.py',212),
  ('require_key_lst -> require_key require_key_lst','require_key_lst',2,'p_require_key_lst','pddlparser.py',217),
  ('require_key_lst -> require_key','require_key_lst',1,'p_require_key_lst','pddlparser.py',218),
  ('require_key -> ADL_KEY','require_key',1,'p_require_key','pddlparser.py',226),
  ('require_key -> STRIPS_KEY','require_key',1,'p_require_key','pddlparser.py',227),
  ('require_key -> EQUALITY_KEY','require_key',1,'p_require_key','pddlparser.py',228),
  ('require_key -> TYPING_KEY','require_key',1,'p_require_key','pddlparser.py',229),
  ('require_key -> PROBABILISTIC_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',230),
  ('require_key -> NON_DETERMINISTIC_KEY','require_key',1,'p_require_key','pddlparser.py',231),
  ('require_key -> CONDITIONAL_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',232),
  ('require_key -> EXISTENTIAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',233),
  ('require_key -> NEGATIVE_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',234),
  ('require_key -> UNIVERSAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',235),
  ('require_key -> DISJUNCTIVE_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',236),
  ('types_def -> LPAREN TYPES_KEY typed_names_lst RPAREN','types_def',4,'p_types_def','pddlparser.py',241),
  ('constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN','constants_def',4,'p_constants_def','pddlparser.py',251),
  ('predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN','predicates_def',4,'p_predicates_def','pddlparser.py',261),
  ('predicate_def_lst -> predicate_def predicate_def_lst','predicate_def_lst',2,'p_predicate_def_lst','pddlparser.py',266),
  ('predicate_def_lst -> predicate_def','predicate_def_lst',1,'p_predicate_def_lst','pddlparser.py',267),
  ('predicate_def -> LPAREN NAME typed_variables_lst RPAREN','predicate_def',4,'p_predicate_def','pddlparser.py',275),
  ('predicate_def -> LPAREN NAME RPAREN','predicate_def',3,'p_predicate_def','pddlparser.py',276),
  ('action_def_lst -> action_def action_def_lst','action_def_lst',2,'p_action_def_lst','pddlparser.py',285),
  ('action_def_lst -> action_def','action_def_lst',1,'p_action_def_lst','pddlparser.py',286),
  ('action_def -> LPAREN ACTION_KEY NAME action_def_body_list RPAREN','action_def',5,'p_action_def','pddlparser.py',294),
  ('action_def_body_list -> action_def_body action_def_body_list','action_def_body_list',2,'p_action_def_body_list','pddlparser.py',312),
  ('action_def_body_list -> action_def_body','action_def_body_list',1,'p_action_def_body_list','pddlparser.py',313),
  ('action_def_body -> parameters_def','action_def_body',1,'p_action_def_body','pddlparser.py',321),
  ('action_def_body -> precond_def','action_def_body',1,'p_action_def_body','pddlparser.py',322),
  ('action_def_body -> effect_def','action_def_body',1,'p_action_def_body','pddlparser.py',323),
  ('parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN','parameters_def',4,'p_parameters_def','pddlparser.py',328),
  ('parameters_def -> PARAMETERS_KEY LPAREN RPAREN','parameters_def',3,'p_parameters_def','pddlparser.py',329),
  ('precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN','precond_def',5,'p_precond_def','pddlparser.py',337),
  ('precond_def -> PRECONDITION_KEY precond','precond_def',2,'p_precond_def','pddlparser.py',338),
  ('preconds_lst -> precond preconds_lst','preconds_lst',2,'p_preconds_lst','pddlparser.py',357),
  ('preconds_lst -> precond','preconds_lst',1,'p_preconds_lst','pddlparser.py',358),
  ('precond -> literal','precond',1,'p_precond','pddlparser.py',366),
  ('precond -> universal_precond','precond',1,'p_precond','pddlparser.py',367),
  ('precond -> existential_precond','precond',1,'p_precond','pddlparser.py',368),
  ('universal_precond -> <empty>','universal_precond',0,'p_universal_precond','pddlparser.py',373),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','universal_precond',7,'p_universal_precond','pddlparser.py',374),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','universal_precond',10,'p_universal_precond','pddlparser.py',375),
  ('existential_precond -> <empty>','existential_precond',0,'p_existential_precond','pddlparser.py',383),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','existential_precond',7,'p_existential_precond','pddlparser.py',384),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','existential_precond',10,'p_existential_precond','pddlparser.py',385),
  ('effect_def -> EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN','effect_def',5,'p_effect_def','pddlparser.py',393),
  ('effect_def -> EFFECT_KEY effect','effect_def',2,'p_effect_def','pddlparser.py',394),
  ('effect_lst -> effect effect_lst','effect_lst',2,'p_effect_lst','pddlparser.py',433),
  ('effect_lst -> effect','effect_lst',1,'p_effect_lst','pddlparser.py',434),
  ('effect -> literal','effect',1,'p_effect','pddlparser.py',442),
  ('effect -> conditional_for_eff','effect',1,'p_effect','pddlparser.py',443),
  ('effect -> conditional_when_eff','effect',1,'p_effect','pddlparser.py',444),
  ('effect -> LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',445),
  ('effect -> LPAREN ONEOF_KEY nd_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',446),
  ('effect -> LPAREN AND_KEY RPAREN','effect',3,'p_effect','pddlparser.py',447),
  ('nd_effect_lst -> nd_effect nd_effect_lst','nd_effect_lst',2,'p_nd_effect_lst','pddlparser.py',459),
  ('nd_effect_lst -> nd_effect','nd_effect_lst',1,'p_nd_effect_lst','pddlparser.py',460),
  ('nd_effect -> LPAREN AND_KEY effect_lst RPAREN','nd_effect',4,'p_nd_effect','pddlparser.py',468),
  ('nd_effect -> effect','nd_effect',1,'p_nd_effect','pddlparser.py',469),
  ('prob_effect_lst -> prob_effect prob_effect_lst','prob_effect_lst',2,'p_prob_effect_lst','pddlparser.py',477),
  ('prob_effect_lst -> prob_effect','prob_effect_lst',1,'p_prob_effect_lst','pddlparser.py',478),
  ('prob_effect -> PROBABILITY LPAREN AND_KEY effect_lst RPAREN','prob_effect',5,'p_prob_effect','pddlparser.py',486),
  ('prob_effect -> PROBABILITY effect','prob_effect',2,'p_prob_effect','pddlparser.py',487),
  ('conditional_for_eff -> <empty>','conditional_for_eff',0,'p_conditional_for_eff','pddlparser.py',495),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN conditional_when_eff RPAREN','conditional_for_eff',7,'p_conditional_for_eff','pddlparser.py',496),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','conditional_for_eff',7,'p_conditional_for_eff','pddlparser.py',497),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_for_eff',10,'p_conditional_for_eff','pddlparser.py',498),
  ('conditional_when_eff -> <empty>','conditional_when_eff',0,'p_conditional_when_eff','pddlparser.py',509),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal literal RPAREN','conditional_when_eff',5,'p_conditional_when_eff','pddlparser.py',510),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',511),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',512),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',11,'p_conditional_when_eff','pddlparser.py',513),
  ('literals_lst -> literal literals_lst','literals_lst',2,'p_literals_lst','pddlparser.py',527),
  ('literals_lst -> literal','literals_lst',1,'p_literals_lst','pddlparser.py',528),
  ('literal -> LPAREN NOT_KEY predicate RPAREN','literal',4,'p_literal','pddlparser.py',536),
  ('literal -> predicate','literal',1,'p_literal','pddlparser.py',537),
  ('ground_predicates_lst -> ground_predicate ground_predicates_lst','ground_predicates_lst',2,'p_ground_predicates_lst','pddlparser.py',545),
  ('ground_predicates_lst -> ground_predicate','ground_predicates_lst',1,'p_ground_predicates_lst','pddlparser.py',546),
  ('predicate -> LPAREN NAME arguments_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',554),
  ('predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',555),
  ('predicate -> LPAREN EQUALS VARIABLE constant RPAREN','predicate',5,'p_predicate','pddlparser.py',556),
  ('predicate -> LPAREN EQUALS constant VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',557),
  ('predicate -> LPAREN NAME RPAREN','predicate',3,'p_predicate','pddlparser.py',558),
  ('arguments_lst -> constant arguments_lst','arguments_lst',2,'p_arguments_lst','pddlparser.py',568),
  ('arguments_lst -> VARIABLE arguments_lst','arguments_lst',2,'p_arguments_lst','pddlparser.py',569),
  ('arguments_lst -> constant','arguments_lst',1,'p_arguments_lst','pddlparser.py',570),
  ('arguments_lst -> VARIABLE','arguments_lst',1,'p_arguments_lst','pddlparser.py',571),
  ('ground_predicate -> LPAREN NAME constants_lst RPAREN','ground_predicate',4,'p_ground_predicate','pddlparser.py',579),
  ('ground_predicate -> LPAREN NAME RPAREN','ground_predicate',3,'p_ground_predicate','pddlparser.py',580),
  ('typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst','typed_constants_lst',4,'p_typed_constants_lst','pddlparser.py',588),
  ('typed_constants_lst -> constants_lst HYPHEN type','typed_constants_lst',3,'p_typed_constants_lst','pddlparser.py',589),
  ('typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst','typed_variables_lst',4,'p_typed_variables_lst','pddlparser.py',597),
  ('typed_variables_lst -> variables_lst HYPHEN type','typed_variables_lst',3,'p_typed_variables_lst','pddlparser.py',598),
  ('constants_lst -> constant constants_lst','constants_lst',2,'p_constants_lst','pddlparser.py',606),
  ('constants_lst -> constant','constants_lst',1,'p_constants_lst','pddlparser.py',607),
  ('variables_lst -> VARIABLE variables_lst','variables_lst',2,'p_variables_lst','pddlparser.py',615),
  ('variables_lst -> VARIABLE','variables_lst',1,'p_variables_lst','pddlparser.py',616),
  ('typed_names_lst -> names_lst HYPHEN type typed_names_lst','typed_names_lst',4,'p_typed_names_lst','pddlparser.py',624),
  ('typed_names_lst -> names_lst HYPHEN type','typed_names_lst',3,'p_typed_names_lst','pddlparser.py',625),
  ('typed_names_lst -> names_lst','typed_names_lst',1,'p_typed_names_lst','pddlparser.py',626),
  ('names_lst -> NAME names_lst','names_lst',2,'p_names_lst','pddlparser.py',636),
  ('names_lst -> NAME','names_lst',1,'p_names_lst','pddlparser.py',637),
  ('problem -> LPAREN DEFINE_KEY problem_structure_def_lst RPAREN','problem',4,'p_problem','pddlparser.py',647),
  ('problem_structure_def_lst -> problem_structure_def problem_structure_def_lst','problem_structure_def_lst',2,'p_problem_structure_def_lst','pddlparser.py',670),
  ('problem_structure_def_lst -> problem_structure_def','problem_structure_def_lst',1,'p_problem_structure_def_lst','pddlparser.py',671),
  ('problem_structure_def -> problem_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',679),
  ('problem_structure_def -> domain_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',680),
  ('problem_structure_def -> objects_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',681),
  ('problem_structure_def -> init_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',682),
  ('problem_structure_def -> goal_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',683),
  ('problem_def -> LPAREN PROBLEM_KEY NAME RPAREN','problem_def',4,'p_problem_def','pddlparser.py',688),
  ('objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN','objects_def',4,'p_objects_def','pddlparser.py',693),
  ('init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','init_def',7,'p_init_def','pddlparser.py',703),
  ('init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN','init_def',4,'p_init_def','pddlparser.py',704),
  ('goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','goal_def',7,'p_goal_def','pddlparser.py',712),
  ('goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN','goal_def',4,'p_goal_def','pddlparser.py',713),
  ('type -> NAME','type',1,'p_type','pddlparser.py',721),
  ('constant -> NAME','constant',1,'p_constant','pddlparser.py',726),
]
