Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WHEN_KEY

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 4     domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
Rule 5     problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
Rule 6     problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN
Rule 7     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 8     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 9     objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 10    init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 11    init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 12    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 13    goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN
Rule 14    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 15    require_key_lst -> require_key require_key_lst
Rule 16    require_key_lst -> require_key
Rule 17    require_key -> STRIPS_KEY
Rule 18    require_key -> EQUALITY_KEY
Rule 19    require_key -> TYPING_KEY
Rule 20    require_key -> PROBABILISTIC_EFFECTS_KEY
Rule 21    require_key -> EXISTENTIAL_PRECONDITIONS_KEY
Rule 22    require_key -> NEGATIVE_PRECONDITIONS_KEY
Rule 23    require_key -> UNIVERSAL_PRECONDITIONS_KEY
Rule 24    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 25    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 26    predicate_def_lst -> predicate_def predicate_def_lst
Rule 27    predicate_def_lst -> predicate_def
Rule 28    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 29    predicate_def -> LPAREN NAME RPAREN
Rule 30    action_def_lst -> action_def action_def_lst
Rule 31    action_def_lst -> action_def
Rule 32    action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
Rule 33    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 34    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 35    action_def_body -> precond_def effects_def
Rule 36    precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN
Rule 37    precond_def -> PRECONDITION_KEY precond
Rule 38    preconds_lst -> precond preconds_lst
Rule 39    preconds_lst -> precond
Rule 40    precond -> literal
Rule 41    precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
Rule 42    precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
Rule 43    precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
Rule 44    precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
Rule 45    effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
Rule 46    effects_def -> EFFECT_KEY effect
Rule 47    effects_lst -> effect effects_lst
Rule 48    effects_lst -> effect
Rule 49    effect -> literal
Rule 50    effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
Rule 51    effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN
Rule 52    literals_lst -> literal literals_lst
Rule 53    literals_lst -> literal
Rule 54    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 55    literal -> predicate
Rule 56    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 57    ground_predicates_lst -> ground_predicate
Rule 58    predicate -> LPAREN NAME variables_lst RPAREN
Rule 59    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 60    predicate -> LPAREN NAME RPAREN
Rule 61    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 62    ground_predicate -> LPAREN NAME RPAREN
Rule 63    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 64    typed_constants_lst -> constants_lst HYPHEN type
Rule 65    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 66    typed_variables_lst -> variables_lst HYPHEN type
Rule 67    constants_lst -> constant constants_lst
Rule 68    constants_lst -> constant
Rule 69    variables_lst -> VARIABLE variables_lst
Rule 70    variables_lst -> VARIABLE
Rule 71    names_lst -> NAME names_lst
Rule 72    names_lst -> NAME
Rule 73    type -> NAME
Rule 74    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 32
AND_KEY              : 10 12 36 42 44 45 51
DEFINE_KEY           : 3 4 5 6
DOMAIN_KEY           : 7
EFFECT_KEY           : 45 46
EQUALITY_KEY         : 18
EQUALS               : 59
EXISTENTIAL_PRECONDITIONS_KEY : 21
EXISTS_KEY           : 41 42
FORALL_KEY           : 43 44
GOAL_KEY             : 12 13
HYPHEN               : 63 64 65 66
INIT_KEY             : 10 11
LPAREN               : 3 4 5 6 7 8 9 10 10 11 12 12 13 14 24 25 28 29 32 33 34 36 41 41 42 42 42 43 43 44 44 44 45 50 51 51 54 58 59 60 61 62
NAME                 : 7 8 28 29 32 58 60 61 62 71 72 73 74
NEGATIVE_PRECONDITIONS_KEY : 22
NOT_KEY              : 54
OBJECTS_KEY          : 9
PARAMETERS_KEY       : 33 34
PRECONDITION_KEY     : 36 37
PREDICATES_KEY       : 25
PROBABILISTIC_EFFECTS_KEY : 20
PROBABILISTIC_KEY    : 50 51
PROBABILITY          : 50 51
PROBLEM_KEY          : 8
REQUIREMENTS_KEY     : 14
RPAREN               : 3 4 5 6 7 8 9 10 10 11 12 12 13 14 24 25 28 29 32 33 34 36 41 41 42 42 42 43 43 44 44 44 45 50 51 51 54 58 59 60 61 62
STRIPS_KEY           : 17
TYPES_KEY            : 24
TYPING_KEY           : 19
UNIVERSAL_PRECONDITIONS_KEY : 23
VARIABLE             : 59 59 69 70
WHEN_KEY             : 
error                : 

Nonterminals, with rules where they appear

action_def           : 30 31
action_def_body      : 32
action_def_lst       : 3 4 30
constant             : 67 68
constants_lst        : 61 63 64 67
domain               : 1
domain_def           : 3 4 5 6
effect               : 46 47 48
effects_def          : 35
effects_lst          : 45 47
goal_def             : 5 6
ground_predicate     : 56 57
ground_predicates_lst : 10 11 12 13 56
init_def             : 5 6
literal              : 40 41 43 49 50 52 53
literals_lst         : 42 44 51 52
names_lst            : 24 71
objects_def          : 5
parameters_def       : 32
pddl                 : 0
precond              : 37 38 39
precond_def          : 35
preconds_lst         : 36 38
predicate            : 54 55
predicate_def        : 26 27
predicate_def_lst    : 25 26
predicates_def       : 3 4
problem              : 2
problem_def          : 5 6
require_def          : 3 4
require_key          : 15 16
require_key_lst      : 14 15
type                 : 63 64 65 66
typed_constants_lst  : 9 63
typed_variables_lst  : 28 33 41 42 43 44 65
types_def            : 3
variables_lst        : 58 65 66 69

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) domain -> . LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (5) problem -> . LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
    (6) problem -> . LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN

    LPAREN          shift and go to state 2

    problem                        shift and go to state 1
    pddl                           shift and go to state 3
    domain                         shift and go to state 4

state 1

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 2

    (3) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN . DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (5) problem -> LPAREN . DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
    (6) problem -> LPAREN . DEFINE_KEY problem_def domain_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 3

    (0) S' -> pddl .



state 4

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY . domain_def require_def predicates_def action_def_lst RPAREN
    (5) problem -> LPAREN DEFINE_KEY . problem_def domain_def objects_def init_def goal_def RPAREN
    (6) problem -> LPAREN DEFINE_KEY . problem_def domain_def init_def goal_def RPAREN
    (7) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (8) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (7) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (8) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (3) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def . require_def predicates_def action_def_lst RPAREN
    (14) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12

state 8

    (5) problem -> LPAREN DEFINE_KEY problem_def . domain_def objects_def init_def goal_def RPAREN
    (6) problem -> LPAREN DEFINE_KEY problem_def . domain_def init_def goal_def RPAREN
    (7) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 14

    domain_def                     shift and go to state 13

state 9

    (7) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 15


state 10

    (8) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 16


state 11

    (14) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 17


state 12

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def require_def . predicates_def action_def_lst RPAREN
    (24) types_def -> . LPAREN TYPES_KEY names_lst RPAREN
    (25) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 19

    types_def                      shift and go to state 18
    predicates_def                 shift and go to state 20

state 13

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def . objects_def init_def goal_def RPAREN
    (6) problem -> LPAREN DEFINE_KEY problem_def domain_def . init_def goal_def RPAREN
    (9) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN
    (10) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (11) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 23

    objects_def                    shift and go to state 21
    init_def                       shift and go to state 22

state 14

    (7) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9


state 15

    (7) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 24


state 16

    (8) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 25


state 17

    (14) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (15) require_key_lst -> . require_key require_key_lst
    (16) require_key_lst -> . require_key
    (17) require_key -> . STRIPS_KEY
    (18) require_key -> . EQUALITY_KEY
    (19) require_key -> . TYPING_KEY
    (20) require_key -> . PROBABILISTIC_EFFECTS_KEY
    (21) require_key -> . EXISTENTIAL_PRECONDITIONS_KEY
    (22) require_key -> . NEGATIVE_PRECONDITIONS_KEY
    (23) require_key -> . UNIVERSAL_PRECONDITIONS_KEY

    STRIPS_KEY      shift and go to state 33
    EQUALITY_KEY    shift and go to state 34
    TYPING_KEY      shift and go to state 30
    PROBABILISTIC_EFFECTS_KEY shift and go to state 29
    EXISTENTIAL_PRECONDITIONS_KEY shift and go to state 27
    NEGATIVE_PRECONDITIONS_KEY shift and go to state 26
    UNIVERSAL_PRECONDITIONS_KEY shift and go to state 31

    require_key_lst                shift and go to state 32
    require_key                    shift and go to state 28

state 18

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (25) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 35

    predicates_def                 shift and go to state 36

state 19

    (24) types_def -> LPAREN . TYPES_KEY names_lst RPAREN
    (25) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    TYPES_KEY       shift and go to state 37
    PREDICATES_KEY  shift and go to state 38


state 20

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def . action_def_lst RPAREN
    (30) action_def_lst -> . action_def action_def_lst
    (31) action_def_lst -> . action_def
    (32) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    LPAREN          shift and go to state 39

    action_def                     shift and go to state 41
    action_def_lst                 shift and go to state 40

state 21

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def . init_def goal_def RPAREN
    (10) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (11) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 42

    init_def                       shift and go to state 43

state 22

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def . goal_def RPAREN
    (12) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (13) goal_def -> . LPAREN GOAL_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 45

    goal_def                       shift and go to state 44

state 23

    (9) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN
    (10) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (11) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    OBJECTS_KEY     shift and go to state 47
    INIT_KEY        shift and go to state 46


state 24

    (7) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 7 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 25

    (8) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 8 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 26

    (22) require_key -> NEGATIVE_PRECONDITIONS_KEY .

    STRIPS_KEY      reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)
    EQUALITY_KEY    reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)
    TYPING_KEY      reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)
    EXISTENTIAL_PRECONDITIONS_KEY reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)
    NEGATIVE_PRECONDITIONS_KEY reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)
    UNIVERSAL_PRECONDITIONS_KEY reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)
    RPAREN          reduce using rule 22 (require_key -> NEGATIVE_PRECONDITIONS_KEY .)


state 27

    (21) require_key -> EXISTENTIAL_PRECONDITIONS_KEY .

    STRIPS_KEY      reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)
    EQUALITY_KEY    reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)
    TYPING_KEY      reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)
    EXISTENTIAL_PRECONDITIONS_KEY reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)
    NEGATIVE_PRECONDITIONS_KEY reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)
    UNIVERSAL_PRECONDITIONS_KEY reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)
    RPAREN          reduce using rule 21 (require_key -> EXISTENTIAL_PRECONDITIONS_KEY .)


state 28

    (15) require_key_lst -> require_key . require_key_lst
    (16) require_key_lst -> require_key .
    (15) require_key_lst -> . require_key require_key_lst
    (16) require_key_lst -> . require_key
    (17) require_key -> . STRIPS_KEY
    (18) require_key -> . EQUALITY_KEY
    (19) require_key -> . TYPING_KEY
    (20) require_key -> . PROBABILISTIC_EFFECTS_KEY
    (21) require_key -> . EXISTENTIAL_PRECONDITIONS_KEY
    (22) require_key -> . NEGATIVE_PRECONDITIONS_KEY
    (23) require_key -> . UNIVERSAL_PRECONDITIONS_KEY

    RPAREN          reduce using rule 16 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 33
    EQUALITY_KEY    shift and go to state 34
    TYPING_KEY      shift and go to state 30
    PROBABILISTIC_EFFECTS_KEY shift and go to state 29
    EXISTENTIAL_PRECONDITIONS_KEY shift and go to state 27
    NEGATIVE_PRECONDITIONS_KEY shift and go to state 26
    UNIVERSAL_PRECONDITIONS_KEY shift and go to state 31

    require_key_lst                shift and go to state 48
    require_key                    shift and go to state 28

state 29

    (20) require_key -> PROBABILISTIC_EFFECTS_KEY .

    STRIPS_KEY      reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    EQUALITY_KEY    reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    TYPING_KEY      reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    EXISTENTIAL_PRECONDITIONS_KEY reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    NEGATIVE_PRECONDITIONS_KEY reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    UNIVERSAL_PRECONDITIONS_KEY reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    RPAREN          reduce using rule 20 (require_key -> PROBABILISTIC_EFFECTS_KEY .)


state 30

    (19) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 19 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 19 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 19 (require_key -> TYPING_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 19 (require_key -> TYPING_KEY .)
    EXISTENTIAL_PRECONDITIONS_KEY reduce using rule 19 (require_key -> TYPING_KEY .)
    NEGATIVE_PRECONDITIONS_KEY reduce using rule 19 (require_key -> TYPING_KEY .)
    UNIVERSAL_PRECONDITIONS_KEY reduce using rule 19 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 19 (require_key -> TYPING_KEY .)


state 31

    (23) require_key -> UNIVERSAL_PRECONDITIONS_KEY .

    STRIPS_KEY      reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)
    EQUALITY_KEY    reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)
    TYPING_KEY      reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)
    EXISTENTIAL_PRECONDITIONS_KEY reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)
    NEGATIVE_PRECONDITIONS_KEY reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)
    UNIVERSAL_PRECONDITIONS_KEY reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)
    RPAREN          reduce using rule 23 (require_key -> UNIVERSAL_PRECONDITIONS_KEY .)


state 32

    (14) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 49


state 33

    (17) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 17 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 17 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 17 (require_key -> STRIPS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 17 (require_key -> STRIPS_KEY .)
    EXISTENTIAL_PRECONDITIONS_KEY reduce using rule 17 (require_key -> STRIPS_KEY .)
    NEGATIVE_PRECONDITIONS_KEY reduce using rule 17 (require_key -> STRIPS_KEY .)
    UNIVERSAL_PRECONDITIONS_KEY reduce using rule 17 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 17 (require_key -> STRIPS_KEY .)


state 34

    (18) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 18 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 18 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 18 (require_key -> EQUALITY_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 18 (require_key -> EQUALITY_KEY .)
    EXISTENTIAL_PRECONDITIONS_KEY reduce using rule 18 (require_key -> EQUALITY_KEY .)
    NEGATIVE_PRECONDITIONS_KEY reduce using rule 18 (require_key -> EQUALITY_KEY .)
    UNIVERSAL_PRECONDITIONS_KEY reduce using rule 18 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 18 (require_key -> EQUALITY_KEY .)


state 35

    (25) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 38


state 36

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (30) action_def_lst -> . action_def action_def_lst
    (31) action_def_lst -> . action_def
    (32) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    LPAREN          shift and go to state 39

    action_def                     shift and go to state 41
    action_def_lst                 shift and go to state 50

state 37

    (24) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (71) names_lst -> . NAME names_lst
    (72) names_lst -> . NAME

    NAME            shift and go to state 52

    names_lst                      shift and go to state 51

state 38

    (25) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (26) predicate_def_lst -> . predicate_def predicate_def_lst
    (27) predicate_def_lst -> . predicate_def
    (28) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (29) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 55

    predicate_def                  shift and go to state 53
    predicate_def_lst              shift and go to state 54

state 39

    (32) action_def -> LPAREN . ACTION_KEY NAME parameters_def action_def_body RPAREN

    ACTION_KEY      shift and go to state 56


state 40

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 57


state 41

    (30) action_def_lst -> action_def . action_def_lst
    (31) action_def_lst -> action_def .
    (30) action_def_lst -> . action_def action_def_lst
    (31) action_def_lst -> . action_def
    (32) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    RPAREN          reduce using rule 31 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 39

    action_def_lst                 shift and go to state 58
    action_def                     shift and go to state 41

state 42

    (10) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (11) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 46


state 43

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def . goal_def RPAREN
    (12) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (13) goal_def -> . LPAREN GOAL_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 45

    goal_def                       shift and go to state 59

state 44

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 60


state 45

    (12) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (13) goal_def -> LPAREN . GOAL_KEY ground_predicates_lst RPAREN

    GOAL_KEY        shift and go to state 61


state 46

    (10) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (11) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (56) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (57) ground_predicates_lst -> . ground_predicate
    (61) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (62) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 62

    ground_predicate               shift and go to state 63
    ground_predicates_lst          shift and go to state 64

state 47

    (9) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (63) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (64) typed_constants_lst -> . constants_lst HYPHEN type
    (67) constants_lst -> . constant constants_lst
    (68) constants_lst -> . constant
    (74) constant -> . NAME

    NAME            shift and go to state 67

    constants_lst                  shift and go to state 66
    typed_constants_lst            shift and go to state 65
    constant                       shift and go to state 68

state 48

    (15) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 15 (require_key_lst -> require_key require_key_lst .)


state 49

    (14) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 14 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 50

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 69


state 51

    (24) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 70


state 52

    (71) names_lst -> NAME . names_lst
    (72) names_lst -> NAME .
    (71) names_lst -> . NAME names_lst
    (72) names_lst -> . NAME

    RPAREN          reduce using rule 72 (names_lst -> NAME .)
    NAME            shift and go to state 52

    names_lst                      shift and go to state 71

state 53

    (26) predicate_def_lst -> predicate_def . predicate_def_lst
    (27) predicate_def_lst -> predicate_def .
    (26) predicate_def_lst -> . predicate_def predicate_def_lst
    (27) predicate_def_lst -> . predicate_def
    (28) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (29) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 27 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 55

    predicate_def                  shift and go to state 53
    predicate_def_lst              shift and go to state 72

state 54

    (25) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 73


state 55

    (28) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (29) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 74


state 56

    (32) action_def -> LPAREN ACTION_KEY . NAME parameters_def action_def_body RPAREN

    NAME            shift and go to state 75


state 57

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 4 (domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .)


state 58

    (30) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 30 (action_def_lst -> action_def action_def_lst .)


state 59

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 76


state 60

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN .

    $end            reduce using rule 6 (problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN .)


state 61

    (12) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (13) goal_def -> LPAREN GOAL_KEY . ground_predicates_lst RPAREN
    (56) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (57) ground_predicates_lst -> . ground_predicate
    (61) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (62) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 77

    ground_predicate               shift and go to state 63
    ground_predicates_lst          shift and go to state 78

state 62

    (10) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (61) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (62) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 79
    NAME            shift and go to state 80


state 63

    (56) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (57) ground_predicates_lst -> ground_predicate .
    (56) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (57) ground_predicates_lst -> . ground_predicate
    (61) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (62) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 57 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 81

    ground_predicate               shift and go to state 63
    ground_predicates_lst          shift and go to state 82

state 64

    (11) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 83


state 65

    (9) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 84


state 66

    (63) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (64) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 85


state 67

    (74) constant -> NAME .

    NAME            reduce using rule 74 (constant -> NAME .)
    HYPHEN          reduce using rule 74 (constant -> NAME .)
    RPAREN          reduce using rule 74 (constant -> NAME .)


state 68

    (67) constants_lst -> constant . constants_lst
    (68) constants_lst -> constant .
    (67) constants_lst -> . constant constants_lst
    (68) constants_lst -> . constant
    (74) constant -> . NAME

    RPAREN          reduce using rule 68 (constants_lst -> constant .)
    HYPHEN          reduce using rule 68 (constants_lst -> constant .)
    NAME            shift and go to state 67

    constants_lst                  shift and go to state 86
    constant                       shift and go to state 68

state 69

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 70

    (24) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 24 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 71

    (71) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 71 (names_lst -> NAME names_lst .)


state 72

    (26) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 26 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 73

    (25) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 25 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 74

    (28) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (29) predicate_def -> LPAREN NAME . RPAREN
    (65) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (66) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 89
    VARIABLE        shift and go to state 90

    variables_lst                  shift and go to state 87
    typed_variables_lst            shift and go to state 88

state 75

    (32) action_def -> LPAREN ACTION_KEY NAME . parameters_def action_def_body RPAREN
    (33) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (34) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 92

    parameters_def                 shift and go to state 91

state 76

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .

    $end            reduce using rule 5 (problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .)


state 77

    (12) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (61) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (62) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 93
    NAME            shift and go to state 80


state 78

    (13) goal_def -> LPAREN GOAL_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 94


state 79

    (10) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (56) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (57) ground_predicates_lst -> . ground_predicate
    (61) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (62) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 81

    ground_predicate               shift and go to state 63
    ground_predicates_lst          shift and go to state 95

state 80

    (61) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (62) ground_predicate -> LPAREN NAME . RPAREN
    (67) constants_lst -> . constant constants_lst
    (68) constants_lst -> . constant
    (74) constant -> . NAME

    RPAREN          shift and go to state 97
    NAME            shift and go to state 67

    constants_lst                  shift and go to state 96
    constant                       shift and go to state 68

state 81

    (61) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (62) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 80


state 82

    (56) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 56 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 83

    (11) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 11 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 84

    (9) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 9 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 85

    (63) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (64) typed_constants_lst -> constants_lst HYPHEN . type
    (73) type -> . NAME

    NAME            shift and go to state 99

    type                           shift and go to state 98

state 86

    (67) constants_lst -> constant constants_lst .

    RPAREN          reduce using rule 67 (constants_lst -> constant constants_lst .)
    HYPHEN          reduce using rule 67 (constants_lst -> constant constants_lst .)


state 87

    (65) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (66) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 100


state 88

    (28) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 101


state 89

    (29) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 29 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 29 (predicate_def -> LPAREN NAME RPAREN .)


state 90

    (69) variables_lst -> VARIABLE . variables_lst
    (70) variables_lst -> VARIABLE .
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 70 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 70 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 90

    variables_lst                  shift and go to state 102

state 91

    (32) action_def -> LPAREN ACTION_KEY NAME parameters_def . action_def_body RPAREN
    (35) action_def_body -> . precond_def effects_def
    (36) precond_def -> . PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN
    (37) precond_def -> . PRECONDITION_KEY precond

    PRECONDITION_KEY shift and go to state 103

    action_def_body                shift and go to state 104
    precond_def                    shift and go to state 105

state 92

    (33) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (34) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 106


state 93

    (12) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (56) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (57) ground_predicates_lst -> . ground_predicate
    (61) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (62) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 81

    ground_predicate               shift and go to state 63
    ground_predicates_lst          shift and go to state 107

state 94

    (13) goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN .

    RPAREN          reduce using rule 13 (goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN .)


state 95

    (10) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 108


state 96

    (61) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 109


state 97

    (62) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 62 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 62 (ground_predicate -> LPAREN NAME RPAREN .)


state 98

    (63) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (64) typed_constants_lst -> constants_lst HYPHEN type .
    (63) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (64) typed_constants_lst -> . constants_lst HYPHEN type
    (67) constants_lst -> . constant constants_lst
    (68) constants_lst -> . constant
    (74) constant -> . NAME

    RPAREN          reduce using rule 64 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 67

    constants_lst                  shift and go to state 66
    typed_constants_lst            shift and go to state 110
    constant                       shift and go to state 68

state 99

    (73) type -> NAME .

    NAME            reduce using rule 73 (type -> NAME .)
    RPAREN          reduce using rule 73 (type -> NAME .)
    VARIABLE        reduce using rule 73 (type -> NAME .)


state 100

    (65) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (66) typed_variables_lst -> variables_lst HYPHEN . type
    (73) type -> . NAME

    NAME            shift and go to state 99

    type                           shift and go to state 111

state 101

    (28) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 28 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 28 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 102

    (69) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)


state 103

    (36) precond_def -> PRECONDITION_KEY . LPAREN AND_KEY preconds_lst RPAREN
    (37) precond_def -> PRECONDITION_KEY . precond
    (40) precond -> . literal
    (41) precond -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (42) precond -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (43) precond -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (44) precond -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 113

    literal                        shift and go to state 112
    precond                        shift and go to state 115
    predicate                      shift and go to state 114

state 104

    (32) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body . RPAREN

    RPAREN          shift and go to state 116


state 105

    (35) action_def_body -> precond_def . effects_def
    (45) effects_def -> . EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
    (46) effects_def -> . EFFECT_KEY effect

    EFFECT_KEY      shift and go to state 117

    effects_def                    shift and go to state 118

state 106

    (33) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (34) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (65) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (66) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 120
    VARIABLE        shift and go to state 90

    variables_lst                  shift and go to state 87
    typed_variables_lst            shift and go to state 119

state 107

    (12) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 121


state 108

    (10) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 122


state 109

    (61) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 61 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 61 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 110

    (63) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 63 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 111

    (65) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (66) typed_variables_lst -> variables_lst HYPHEN type .
    (65) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (66) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 66 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 90

    variables_lst                  shift and go to state 87
    typed_variables_lst            shift and go to state 123

state 112

    (40) precond -> literal .

    LPAREN          reduce using rule 40 (precond -> literal .)
    RPAREN          reduce using rule 40 (precond -> literal .)
    EFFECT_KEY      reduce using rule 40 (precond -> literal .)


state 113

    (36) precond_def -> PRECONDITION_KEY LPAREN . AND_KEY preconds_lst RPAREN
    (41) precond -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (42) precond -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (43) precond -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (44) precond -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 126
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 128
    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 114

    (55) literal -> predicate .

    LPAREN          reduce using rule 55 (literal -> predicate .)
    RPAREN          reduce using rule 55 (literal -> predicate .)
    EFFECT_KEY      reduce using rule 55 (literal -> predicate .)


state 115

    (37) precond_def -> PRECONDITION_KEY precond .

    EFFECT_KEY      reduce using rule 37 (precond_def -> PRECONDITION_KEY precond .)


state 116

    (32) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .

    LPAREN          reduce using rule 32 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)
    RPAREN          reduce using rule 32 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)


state 117

    (45) effects_def -> EFFECT_KEY . LPAREN AND_KEY effects_lst RPAREN
    (46) effects_def -> EFFECT_KEY . effect
    (49) effect -> . literal
    (50) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (51) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 131

    literal                        shift and go to state 130
    predicate                      shift and go to state 114
    effect                         shift and go to state 132

state 118

    (35) action_def_body -> precond_def effects_def .

    RPAREN          reduce using rule 35 (action_def_body -> precond_def effects_def .)


state 119

    (33) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 133


state 120

    (34) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 34 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 121

    (12) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 134


state 122

    (10) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 10 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 123

    (65) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 65 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 124

    (41) precond -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN literal RPAREN
    (42) precond -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN

    LPAREN          shift and go to state 135


state 125

    (59) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 136


state 126

    (36) precond_def -> PRECONDITION_KEY LPAREN AND_KEY . preconds_lst RPAREN
    (38) preconds_lst -> . precond preconds_lst
    (39) preconds_lst -> . precond
    (40) precond -> . literal
    (41) precond -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (42) precond -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (43) precond -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (44) precond -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 138

    literal                        shift and go to state 112
    preconds_lst                   shift and go to state 137
    precond                        shift and go to state 139
    predicate                      shift and go to state 114

state 127

    (58) predicate -> LPAREN NAME . variables_lst RPAREN
    (60) predicate -> LPAREN NAME . RPAREN
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 141
    VARIABLE        shift and go to state 90

    variables_lst                  shift and go to state 140

state 128

    (43) precond -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN literal RPAREN
    (44) precond -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN

    LPAREN          shift and go to state 142


state 129

    (54) literal -> LPAREN NOT_KEY . predicate RPAREN
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 143

    predicate                      shift and go to state 144

state 130

    (49) effect -> literal .

    RPAREN          reduce using rule 49 (effect -> literal .)
    LPAREN          reduce using rule 49 (effect -> literal .)


state 131

    (45) effects_def -> EFFECT_KEY LPAREN . AND_KEY effects_lst RPAREN
    (50) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (51) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 146
    PROBABILISTIC_KEY shift and go to state 145
    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 132

    (46) effects_def -> EFFECT_KEY effect .

    RPAREN          reduce using rule 46 (effects_def -> EFFECT_KEY effect .)


state 133

    (33) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 33 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 134

    (12) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 12 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 135

    (41) precond -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN literal RPAREN
    (42) precond -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (65) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (66) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 90

    variables_lst                  shift and go to state 87
    typed_variables_lst            shift and go to state 147

state 136

    (59) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 148


state 137

    (36) precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst . RPAREN

    RPAREN          shift and go to state 149


state 138

    (41) precond -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (42) precond -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (43) precond -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (44) precond -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 128
    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 139

    (38) preconds_lst -> precond . preconds_lst
    (39) preconds_lst -> precond .
    (38) preconds_lst -> . precond preconds_lst
    (39) preconds_lst -> . precond
    (40) precond -> . literal
    (41) precond -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (42) precond -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (43) precond -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN
    (44) precond -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 39 (preconds_lst -> precond .)
    LPAREN          shift and go to state 138

    literal                        shift and go to state 112
    preconds_lst                   shift and go to state 150
    precond                        shift and go to state 139
    predicate                      shift and go to state 114

state 140

    (58) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 151


state 141

    (60) predicate -> LPAREN NAME RPAREN .

    RPAREN          reduce using rule 60 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 60 (predicate -> LPAREN NAME RPAREN .)
    EFFECT_KEY      reduce using rule 60 (predicate -> LPAREN NAME RPAREN .)


state 142

    (43) precond -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN literal RPAREN
    (44) precond -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN
    (65) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (66) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 90

    variables_lst                  shift and go to state 87
    typed_variables_lst            shift and go to state 152

state 143

    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 144

    (54) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 153


state 145

    (50) effect -> LPAREN PROBABILISTIC_KEY . PROBABILITY literal RPAREN
    (51) effect -> LPAREN PROBABILISTIC_KEY . PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN

    PROBABILITY     shift and go to state 154


state 146

    (45) effects_def -> EFFECT_KEY LPAREN AND_KEY . effects_lst RPAREN
    (47) effects_lst -> . effect effects_lst
    (48) effects_lst -> . effect
    (49) effect -> . literal
    (50) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (51) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 155

    literal                        shift and go to state 130
    effects_lst                    shift and go to state 157
    predicate                      shift and go to state 114
    effect                         shift and go to state 156

state 147

    (41) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN literal RPAREN
    (42) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN

    RPAREN          shift and go to state 158


state 148

    (59) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 159


state 149

    (36) precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN .

    EFFECT_KEY      reduce using rule 36 (precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN .)


state 150

    (38) preconds_lst -> precond preconds_lst .

    RPAREN          reduce using rule 38 (preconds_lst -> precond preconds_lst .)


state 151

    (58) predicate -> LPAREN NAME variables_lst RPAREN .

    RPAREN          reduce using rule 58 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 58 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EFFECT_KEY      reduce using rule 58 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 152

    (43) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN literal RPAREN
    (44) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN

    RPAREN          shift and go to state 160


state 153

    (54) literal -> LPAREN NOT_KEY predicate RPAREN .

    LPAREN          reduce using rule 54 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    RPAREN          reduce using rule 54 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EFFECT_KEY      reduce using rule 54 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 154

    (50) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY . literal RPAREN
    (51) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY . LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 162

    literal                        shift and go to state 161
    predicate                      shift and go to state 114

state 155

    (50) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (51) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    PROBABILISTIC_KEY shift and go to state 145
    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 156

    (47) effects_lst -> effect . effects_lst
    (48) effects_lst -> effect .
    (47) effects_lst -> . effect effects_lst
    (48) effects_lst -> . effect
    (49) effect -> . literal
    (50) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (51) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 48 (effects_lst -> effect .)
    LPAREN          shift and go to state 155

    literal                        shift and go to state 130
    effects_lst                    shift and go to state 163
    predicate                      shift and go to state 114
    effect                         shift and go to state 156

state 157

    (45) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst . RPAREN

    RPAREN          shift and go to state 164


state 158

    (41) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . literal RPAREN
    (42) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 166

    literal                        shift and go to state 165
    predicate                      shift and go to state 114

state 159

    (59) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    RPAREN          reduce using rule 59 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 59 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EFFECT_KEY      reduce using rule 59 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 160

    (43) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . literal RPAREN
    (44) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . LPAREN AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 168

    literal                        shift and go to state 167
    predicate                      shift and go to state 114

state 161

    (50) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal . RPAREN

    RPAREN          shift and go to state 169


state 162

    (51) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN . AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 170
    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 163

    (47) effects_lst -> effect effects_lst .

    RPAREN          reduce using rule 47 (effects_lst -> effect effects_lst .)


state 164

    (45) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .

    RPAREN          reduce using rule 45 (effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .)


state 165

    (41) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal . RPAREN

    RPAREN          shift and go to state 171


state 166

    (42) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN . AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 172
    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 167

    (43) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal . RPAREN

    RPAREN          shift and go to state 173


state 168

    (44) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN . AND_KEY literals_lst RPAREN RPAREN
    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 174
    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 169

    (50) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .

    RPAREN          reduce using rule 50 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .)
    LPAREN          reduce using rule 50 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .)


state 170

    (51) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY . literals_lst RPAREN RPAREN
    (52) literals_lst -> . literal literals_lst
    (53) literals_lst -> . literal
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 176

    literal                        shift and go to state 175
    predicate                      shift and go to state 114
    literals_lst                   shift and go to state 177

state 171

    (41) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .

    LPAREN          reduce using rule 41 (precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .)
    RPAREN          reduce using rule 41 (precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .)
    EFFECT_KEY      reduce using rule 41 (precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .)


state 172

    (42) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY . literals_lst RPAREN RPAREN
    (52) literals_lst -> . literal literals_lst
    (53) literals_lst -> . literal
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 176

    literal                        shift and go to state 175
    predicate                      shift and go to state 114
    literals_lst                   shift and go to state 178

state 173

    (43) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .

    LPAREN          reduce using rule 43 (precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .)
    RPAREN          reduce using rule 43 (precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .)
    EFFECT_KEY      reduce using rule 43 (precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN .)


state 174

    (44) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY . literals_lst RPAREN RPAREN
    (52) literals_lst -> . literal literals_lst
    (53) literals_lst -> . literal
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 176

    literal                        shift and go to state 175
    predicate                      shift and go to state 114
    literals_lst                   shift and go to state 179

state 175

    (52) literals_lst -> literal . literals_lst
    (53) literals_lst -> literal .
    (52) literals_lst -> . literal literals_lst
    (53) literals_lst -> . literal
    (54) literal -> . LPAREN NOT_KEY predicate RPAREN
    (55) literal -> . predicate
    (58) predicate -> . LPAREN NAME variables_lst RPAREN
    (59) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 53 (literals_lst -> literal .)
    LPAREN          shift and go to state 176

    literal                        shift and go to state 175
    predicate                      shift and go to state 114
    literals_lst                   shift and go to state 180

state 176

    (54) literal -> LPAREN . NOT_KEY predicate RPAREN
    (58) predicate -> LPAREN . NAME variables_lst RPAREN
    (59) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (60) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 129
    NAME            shift and go to state 127
    EQUALS          shift and go to state 125


state 177

    (51) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst . RPAREN RPAREN

    RPAREN          shift and go to state 181


state 178

    (42) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst . RPAREN RPAREN

    RPAREN          shift and go to state 182


state 179

    (44) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst . RPAREN RPAREN

    RPAREN          shift and go to state 183


state 180

    (52) literals_lst -> literal literals_lst .

    RPAREN          reduce using rule 52 (literals_lst -> literal literals_lst .)


state 181

    (51) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN . RPAREN

    RPAREN          shift and go to state 184


state 182

    (42) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN . RPAREN

    RPAREN          shift and go to state 185


state 183

    (44) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN . RPAREN

    RPAREN          shift and go to state 186


state 184

    (51) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN .

    RPAREN          reduce using rule 51 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN .)
    LPAREN          reduce using rule 51 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY LPAREN AND_KEY literals_lst RPAREN RPAREN .)


state 185

    (42) precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .

    LPAREN          reduce using rule 42 (precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .)
    RPAREN          reduce using rule 42 (precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .)
    EFFECT_KEY      reduce using rule 42 (precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .)


state 186

    (44) precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .

    LPAREN          reduce using rule 44 (precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .)
    RPAREN          reduce using rule 44 (precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .)
    EFFECT_KEY      reduce using rule 44 (precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN .)

